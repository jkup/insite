{
  "entries": [
    {
      "title": "Page Not Found",
      "url": "/404.html",
      "date": null,
      "categories": [

      ],
      "body": "If you followed a link to get here, I'd really appreciate it if you let me know. Please email jon [at] insitedesignlab.com with as much information as you have! Take me back home →"
    },
    {
      "title": "About Me",
      "url": "/about-me/index.html",
      "date": null,
      "categories": [

      ],
      "body": "I started developing websites in 2010 and haven't looked back. I read blogs all day and write blogs all night. I love building websites, especially in WordPress and I get a lot of joy out of teaching what I know to others. I'm really interested in Responsive Web Design, People Who Start Their Own Businesses, and Prolific Bloggers. My ambitions are to: Interested in collaborating on a project together or just want to talk? Email me @ jon [at] insitedesignlab.com and we'll talk!"
    },
    {
      "title": "Insite Design Lab",
      "url": "/archives/index.html",
      "date": null,
      "categories": [

      ],
      "body": ""
    },
    {
      "title": "Insite Design Lab",
      "url": "/blog/index.html",
      "date": null,
      "categories": [

      ],
      "body": "+ Load More Posts"
    },
    {
      "title": "Contact Me",
      "url": "/contact-me/index.html",
      "date": null,
      "categories": [

      ],
      "body": "Email Me @ jon [at] insitedesignlab.com Message Me On Twitter"
    },
    {
      "title": "Get Involved",
      "url": "/get-involved/index.html",
      "date": null,
      "categories": [

      ],
      "body": "Looking to get your start as a blogger? Maybe you just want to bring more traffic to your website. Write a guest post for us! Get a hold of me and we’ll figure something out. Not only do I do my absolute best to respond to every comment left on my blog, but if you fill out the ‘website’ field I’ll check your site out and leave a comment for you! I think trading comments is a great way to get your blog exposure and I do my best to support new blogs. There are a lot of great ways to stay up to date with Insite Design Lab. Here are a few of our favorites: I love talking to bloggers and web designers — seriously I do. If you want to collaborate on something or just chat, send me an email @ jon [at] insitedesignlab.com and I’d be happy to talk to you."
    },
    {
      "title": null,
      "url": "/search/index.html",
      "date": null,
      "categories": [

      ],
      "body": ""
    },
    {
      "title": "Wordpress Sites Starting at $500!",
      "url": "/wordpress-sites-starting-at-500",
      "date": "2011-04-08 00:00:00 -0400",
      "categories": [

      ],
      "body": "We think Wordpress is the greatest thing that’s happened to the internet since well, ever.  Discover the many great reasons to use Wordpress by getting in touch with us, then get started on your new website! Or revamp your existing site into an easier-to-use, dynamic content management system. You can also contact us if you just want to learn more about Wordpress. Well, honestly, because we're just starting out. Individually we've been doing web work for quite some time but Insite Design Lab is brand spanking new! So, get to us before we become jaded. In an effort to expand our company portfolio and give the world a chance to see how awesome we are, we're offering a limited time $500 starter rate on custom Wordpress sites."
    },
    {
      "title": "How Much Does A Website Cost - Part 1",
      "url": "/how-much-does-a-website-cost-part-1",
      "date": "2011-04-23 00:00:00 -0400",
      "categories": [

      ],
      "body": "When I first started Insite Design Lab one of the most difficult decisions I had to make was how much to charge for web design. I found very few resources online detailing prices and the difference between web design firms, so I've decided to write my own post based on my experience in attempt to answer the questions \"how much does a website cost?\". I suppose there are two important things to consider when choosing your budget. The first is what type of designer / design team would best take care of your needs and the other of course is your budget. This will be part 1 of a 2-series post and will cover factors that can be used to determine what type of designer you should choose. With so many different types of designers out there, it is important to understand the pros and cons of each type and figure out which would work best for your project. Before we answer the question on how much a website costs, we need to understand the different people who make their living building websites. For the sake of this article I'm going to break designers down into three different categories: Freelancers, Web Design Companies and Marketing Firms. Freelancers are typically 1-2 person teams that work out of their home. They might have other jobs during the day and take on web design gigs after-hours. This isn't to say that they are less qualified or talented than companies (Some of the most talented people in the field are freelancers.) It is merely to say that you will most likely be dealing with a single person and you may forfeit some of the benefits you get from working with a professional company. Pros to working with freelancers are that they often cost much less than web design companies and you will probably be in constant communication with the person who is actually working on your project. Cons to freelancers are they tend to be more specialized, and may only provide a select number of services, meaning that you may have to go elsewhere if you would like additional functionality on your project. Web Design Companies vary in size and services. Typically they range from 3 to 20 people and offer several different services. Often, web design companies have a few all around people, complemented by specialists. One of the biggest perks of working with a web design company is that, at any given time, you will likely be dealing with the person on their team best qualified for the situation. They often have sales people to talk out the details with you, artists to provide you with professional designs, Project Managers to make sure your project is completed on time and professional programmers that can handle projects of any size.The two major drawbacks of these larger companies are that they typically charge a lot more, and may not provide as intimate an experience as you would get working with a freelance designer. More and more, web design companies attempt to encompass a multitude of related services in an effort to turn themselves into a one-stop shop for your digital and business needs. In addition to web design, these companies often times offer additional services such as Search Engine Optimization, PR campaigns, Social Network Marketing and a plethora of real-life marketing services. These companies often have a number of great connections and employees that can truly handle your companies entire online campaign. The pros to these companies are that they can handle any size project and often have great ideas that you may not have considered to improve your traffic and online presence. The cons are that these companies generally charge in the tens of thousands for their services and you may be looking at many months before any deliverables are ready. When beginning the search for a web designer, it is important to really consider the scope of the project when choosing your designer. Some important things to think about are: + Do I need a website that is extensible, that can grow with my company? + Do I need more than just static pages? For example, e-commerce, a newsletter, a forum or a blog? + Do I want an intimate relationship with my designer? Or, would I rather work with a large group of professionals? + What timeline do I need for my project? Read the next part of this article."
    },
    {
      "title": "How Much Does A Website Cost - Part 2",
      "url": "/how-much-does-a-website-cost-part-2",
      "date": "2011-04-24 00:00:00 -0400",
      "categories": [

      ],
      "body": "This will be part 2 of a 2-series post and will cover factors that can be used to determine how much your web design project should cost. If you missed \"Part-1\" You can find it here: Part - 1 | Choosing a designer. Part 1 deals with choosing a designer and highlights the differences between Freelancers, Web Design Companies, and Marketing Firms. This section deals with the actual costs of web design projects and what to expect based on your budget. With a variety of factors altering costs of web design, it is difficult to nail-down specifics. For this reason, most web design websites don't even give you a hint as to what they charge for projects. Unfortunately, this makes it difficult to assess how much websites actually cost. Additionally, people that aren't in the 'field' often times don't really understand what things will raise the cost significantly. Before we get  too far into pricing schemes, let's first take a look at things that dramatically increase the price of your project: Well, now that we've got that out of the way lets start talking about what you can expect to get for your budget. Websites that cost less than five hundred dollars are typically only found through new / inexperienced designers. Sometimes you can get lucky and find talented web designers that are starting out and get yourself a a great site for this price range but typically projects in this range will not look like the websites your competitors have. Often times designers that offer prices this low will use free templates and merely customize them to contain your content and maybe color scheme.  Although this may be all you currently have to spend on a project, I would sincerely recommend saving a little extra and getting a site you'll appreciate more in the end. This is perhaps the trickiest price range because it is seen as a high-end project for an inexperienced developer but a low-end project for someone with more experience. If you find a less experienced designer you'll probably get a good amount of hours out of them. However, if you can find a more experienced company to take your project, you'll probably be able to get a basic Content Management System (CMS)  configured with a free template. The main thing to note here is that for around $1,000 you can either can a decent design or decent functionality. If you pay a designer the page will look much nicer but the usability will suffer. On the other hand, if you go with a CMS with a default theme your site will most-likely look 'good enough' and you will have the opportunity to have a blog, edit pages, and enjoy any and all free plugins that may be available. I realize this is a large range to talk about but I think that it's an appropriate one. The biggest reason is that I believe this is the best range for any small web design project. When you get into the multiple thousand dollar range for your budget, you have a lot of choices for your website that you don't have with a lower budget. One of the options you have at this level is commissioning multiple people /companies to work on your site separately. For example, you could spend $2,000 with a graphic design agency to create a logo and some original artwork and then spend up to $3,000 on having the website built using the art you've already paid for. Not matter what approach you take, you should be able to get a great site within this budget. Many web design firms will do a full-functioning CMS with a custom design for less than $5,000. Alternatively, you could sacrifice some of the design and include some type of e-commerce solution for this budget. I'm not saying you'll be able to get everything you want, but this is probably the best price range for a starter site. The website you get for this range should look good and be scalable if you'd like to expand in the future. I consider this a great range for a medium web design project. You should easily be able to find a designer you really like to work on a project with this budget. E-commerce solutions should be available to you as should well qualified graphic designers. You should be able to talk about adding Search Engine Optimization (SEO) added to the project and be treated to a decent amount of meetings / conference calls between you and their team. This price range should ensure that you have multiple stages to your project, allowing you to view a few different approaches and approve the one you like best. Sites falling in this price range should also be set up to handle higher traffic volumes. This budget is what to expect for large web design projects. As far as design and art, you will be able to find some of the greatest designers around and get a unique website that really stands out from most. Concerning functionality, you should be able to get a website that does anything and everything you'd like it to. These projects often come with SEO, Analytics tools, great original artwork, and a general 'wow' feeling from all who view your website. Additionally, companies that handle projects of this size often have a large collective of employees who specialize in every aspect of the field. This means that if you want an e-commerce site you'll be dealing with someone who does exclusively e-commerce work. If you're using a CMS, you'll be able to get custom plugins written for you and maintaining the website after creation should be very simple. As a final note you should also be able to integrate any existing systems you may already have with this website. These prices are usually reserved for corporate sites. Often times, websites of this size land you exclusive time with the design team. As you get up into this range the sky is the limit. You will be able to have incredible original art, a great functional design, any e-commerce solution you'd like, custom CMS's that are designed for your company, Marketing assistance and a great deal of Search Engine optimization. I can already see this post being contentious being that there are so many different web designers out there with different price ranges and services lists. Most web design companies (like most other companies) charge what they can for their work. You may very well find an extremely talented designer that will provide you with an e-commerce solution for under $1,000. Adversely you may find an experienced designer that charges $20,000 for a small static site. So many variables alter these costs, I'm just trying to give everyone a general idea of what these companies charge and what services you should be able to get with your budget. If you appreciated this article, I would be very grateful if you would share it with your friends or leave me a comment. I'm just getting my start as a blogger and would love to hear what I could be doing better. And let me know what I missed!"
    },
    {
      "title": "Having A Website",
      "url": "/having-a-website",
      "date": "2011-04-25 00:00:00 -0400",
      "categories": [

      ],
      "body": "One of the most difficult things I find myself explaining to people is not to view your website ( or future website ) as a cost so much as an investment. It is important to view your website as a means to advertise, acquire new business, expand your market and increase sales. Often times people are looking to spend as little as possible on a website that will be 'good enough'. I find that this almost always ends in disappointment. Most designers and developers don't like working on budget projects. It makes them feel constricted and does not allow them to really produce something they can be proud of. On the other side, most clients end up disappointed with their websites. Furthermore, the client is left without ever knowing what 'could have been'. I believe that the solution to this problem lies with designers, specifically with salespeople and project managers working for the design agency. It is their job to show prospective clients what websites can bring to a company without making them feel as though you are only after their money. When attending your first meeting with a prospective client, it is important to accomplish two things. First, you should listen to your clients needs and budget and let them know whether or not you'll be able to provide a solution for them. Second, you should present them with information, graphs, statistics and assistance to show them what a website can do for their company. It is important to do this gracefully, and approach this as a person who wants to help. Web design projects are unlike many other services. While it is important to provide your clients with exactly what they are looking for, it is also your duty as an authority in the field to provide them with your ideas and insights for how you could help their company grow."
    },
    {
      "title": "Breaking The Page Wrap",
      "url": "/breaking-the-page-wrap",
      "date": "2011-04-26 00:00:00 -0400",
      "categories": [

      ],
      "body": "Ok, so before I go into this tutorial I wanted to say that I am still learning the in's and out's of CSS and while I figured out how to get this effect to work, I'm still having some problems when trying to embellish upon it. That being said... So, often times I want a navigation bar or a featured post area that breaks out of the page wrap currently containing my site. Before now I've been just ending the page wrap, creating an element with absolute position and then starting the page wrap back up again. I know that could not be the best way of approaching this and a few days ago I found a method that works at least in some situations. It's pretty simple really, although I'm having problems trying to do much more with it. The basic idea is using a negative margin to push the element off screen to either side, and then use padding to bring it back to where it belongs, leaving the background color along the way."
    },
    {
      "title": "Wordpress Plugins I love, but can't find a use for",
      "url": "/wordpress-plugins-i-love-but-cant-find-a-use-for",
      "date": "2011-04-26 00:00:00 -0400",
      "categories": [

      ],
      "body": "While designing websites, I sometimes stumble upon great Wordpress plugins that I just can't seem to find a use for. This post is intended to both spread the word about these great plugins, and ask readers if they've found a way to use these plugins. I recently stumbled upon this Animated Twitter Bird plugin by Sujith of  Techline Info . Twitter is quickly becoming one of the most important marketing tools in a business' repertoire.  Although there are many great plugins to advertise your Twitter account on your website, I haven't yet seen one that is so... well, cute. Perhaps the best thing about this plugin is that it's literally plug-and-play. You just grab it from their website or the 'Add New' Plugins section of your Wordpress site, enter your twitter account name and it starts working. The little blue bird shows up automatically on all of your pages. It flies around your screen on each page load and lands on one of your elements. This may look a little off at times but for the most part it looks great! Easing Slider by Matthew Ruddy is an exceptional image / content slider. Perhaps the flashiest free one on the market. The plugin comes with both a free and premium version, both of which I have used. It looks great right out of the box and the administration panel is quite easy to use. There are multiple sliding effects, shadow choices, and a multitude of other settings. So, with such a rave review, why is it I can't seem to find a use for this plugin you ask? Honestly, it steals the show. I'm sure it doesn't help much that graphic design is far from my area of expertise. This causes me to rely heavily on my CSS skills and this animated picture slider often comes across as 'too much'. I'd love to see some examples of this plugin on a site where it can truly shine. Ok, so I've seen a lot of great looking contact forms out there that come fully loaded with endless options and features. One of the forms I've had the pleasure of using is Gravity Forms.  Now, this very well may show my novice as a Wordpress designer but I have yet to run into a project that Contact Form 7 can't handle. Admittedly, Gravity Forms had a nicer interface but I just do not understand paying for a premiere plugin when Contact Form 7 is readily available for free. Perhaps someone can shed some light on this for me. So, only three for the time being but I hope to come back and add to this post whenever I find a great WP plugin I can't find a use for.  Meanwhile, if any of you have plugins to add, explanations to give or websites using these plugins to show, I'd love to hear from you."
    },
    {
      "title": "Faux Columns CSS Tutorial",
      "url": "/faux-columns-css-tutorial",
      "date": "2011-04-27 00:00:00 -0400",
      "categories": [

      ],
      "body": "Hey everyone, so today I want to talk about 'Faux Columns' in CSS. The reason you need to use faux columns is when you have a sidebar and a main content area with different backgrounds and you would like them to end at the same place, regardless of which section is longer. If you'd like to see examples, check them out below! As far as I can tell, there is no way with CSS to have two separate columns that stretch vertically 'as far as they need to'. As you can see with the example without faux columns you get a very glitchy look if either column is longer than the other. As inefficient as it may seem, the only way to accomplish this is by using an image and repeating it vertically. This image needs to be placed in an element (div or section) that wraps around both the main area and the sidebar. Just a reminder that the faux columns technique will not work unless you add <br style=\"clear: both;\" /> before you end the element containing the repeating image. Before we get into the code, you can also feel free to click on the 'Faux Columns' link above and just steal the code off of my example, the same goes for the background image. I hope this tutorial works well for you, if there is anything I can do to improve it please let me know! Please share with your friends and don't forget to sign up for our RSS feed to stay updated on our latest posts!"
    },
    {
      "title": "5 Things I can't live without",
      "url": "/5-things-i-cant-live-without",
      "date": "2011-04-30 00:00:00 -0400",
      "categories": [

      ],
      "body": "Often times, I hear people talking about what life was like before the internet. How people interacted with each other. How they got directions, communicated, purchased goods and services and so on. While I'd love to write an article on the topic, I feel like it's much too broad. So, instead I want to talk about some of the inventions that make the internet so enjoyable. No matter how hard I try, I cannot honestly remember my life before tabbed-browsing. I vaguely remember desktop screens littered with dozens of internet explorer windows.  Seriously, take a minute to consider how much better your life is due to browsers with tab capabilities. With over 100 million searches per day, it may seem unnecessary to mention Google in this list. However, I think that while the search giant's usefulness is obvious to all, the necessity for organization on the internet may be less-so.  It is predicted that there are over 250,000,000 active websites on the internet right now, and without search engines like Google, it would be neigh impossible to find what you are looking for. A while back, I was working on a static web page consisting of more than 50 pages. The client I was helping wanted me to install Google Analytics on their site. After about the 40th copy / paste, it really sunk in how much I appreciate the ability to have dynamic headers that span every page of your website. So, this one's more catered to developers, but it's still an incredible idea. The ability to view and edit HTML, CSS, Javascript on the fly is an incredible tool.  Additionally, these programs come with a robust set of advanced features allowing you to debug, locate errors, and view the DOM. Yet another great creation that I work with every day. Content management systems allow designers to build complex website that are a breeze to update. I love working with Content Management Systems (CMS)  because as much as I love designing great websites, it brings me even greater joy to build sites that my clients can, and more importantly are excited to use. I work primarily with Wordpress, a popular and free CMS which started as a blogging platform and has transformed into a fully featured system allowing for everything including blogging, e-commerce, forums, static websites and much much more. I work online every day. I deal with frustrations and buggy software and slow programs. Sometimes, I think it's important to take a step back and realize what great advancements have been made in recent years and how fun the internet has become to use."
    },
    {
      "title": "How to Make a Single Page Website",
      "url": "/how-to-make-a-single-page-website",
      "date": "2011-05-10 00:00:00 -0400",
      "categories": [

      ],
      "body": "This tutorial explains how to create a vertical-scrolling single page website in four steps. There are at least 3 kinds of Single Page websites. The basic idea is that all content is placed on one page, but only a portion of it is centered on your computer screen at a given time. Then you can watch the old content slide away when you click a link, instead of loading a whole new page. Often, the scroll bar is still visible on the side, so you could actually drag it up and down and see the whole page at once. The picture below is a screen shot I took of another designer’s website, Eshbeata.com. His first page starts at the top, the second starts at the image gallery, the third page starts where the dirt begins, and the last page is centered around the ocean: I classified the types of single page websites by the direction/s that the page scrolls. Here is my breakdown, with examples: Vertical Scroll (Most Common) Barrel + Barc, Beaver Lab, Little White Umbrella, Eshbeata Horizontal Scroll Vanity Claire, Hotel Oxford, Lomotek 2D Scroll Steve & Jacqs Once again, this post explains the vertical method. When designing your single page website,  you need to decide the following things: Will my page start at the top and scroll down (like this), start at the bottom and scroll up (like this), or start in the middle, and move all over (like this)? How will you differentiate each page? No separation at all? Will there be overlap between the pages? The html is actually pretty simple. You’ve seen the FAQ pages that have a list of questions at the top, and then you click one and it takes you to the middle of the page (like this)? That’s the technique we’re going to use. Basically, you’re going to create a navigation just like normal, except where you normally do an href=\"Link Address\", instead of a link address, you will put a pound sign followed by the unique id of each \"page\": This lets the browser know that the link is within the page. (Just think about when you use href=”#” causing the page to refresh – it’s the same idea. The “#” is still telling the browser to load the same page, except when you include text after the # sign, it’s further telling the browser to look for link of that name on the same page, and scroll to that location). So then if you wanted “three” pages in one, you just create an id for each page in the html. Then, the first thing you do within that div is insert the “id” you specified in the navigation within an anchor tag, like this:http://www.insitedesignlab.com/how-to-make-a-single-page-website/ So that’s it for your html – just add the rest of the html content as you normally would, except it will all go in the same file (likely index.html), and each “page’s” content will go within the appropriate id (#page1, #page2, or #page3). There is a lot I could tell you about the style sheet for a single page website, but the only crucial thing you need to do is give each page id (#page1, #page2 and #page3 from the HTML example) a height of ~1000 pixels (tall enough to take up a user’s computer screen, unless you want overlap – it’s up to you!). This will cause your total page to be several thousand pixels tall, depending on how many internal pages you have. The other main consideration is the navigation bar. I tend to make a thin navigation bar (say 70px) that is fixed to the top of the screen, so the user can click between \"pages\" instead of having to use the scrollbar to find their way around (which ruins the fun of a 1-page website for me). In order to make your page scroll up and down smoothly using jquery, just paste the following code into your html file, right before the “</body>”. Seriously, that’s it. You don’t need anything in the header, and you don’t need to host a jquery file anywhere on your site. When you click a link in your site that takes you somewhere else within the same page it will slide smoothly. Voilà! Your site scrolls. If you want to change the speed, go to the line that reads $(scrollElem).animate({scrollTop: targetOffset}, 400, function() { and change the 400 to whatever you want. (400 = 400 milliseconds). (Thanks to Karl Swedberg for this code!) If you appreciated this article, I would be very grateful if you would share it with your friends or leave me a comment. I'm just getting my start as a blogger and would love to hear what I could be doing better."
    },
    {
      "title": "Things Every Web Design Client Should Know",
      "url": "/things-every-web-design-client-should-know",
      "date": "2011-08-08 00:00:00 -0400",
      "categories": [

      ],
      "body": "There are literally thousands of posts throughout the internet listing all of the important skills and knowledge every web designer should posess.  Although web design is a highly competitive industry and it is important that web designers gain as much experience as possible, I feel this trending topic often misleads clients into thinking that hiring a web designer marks the end of their contribution. Too often web sites are marketed as a product rather than a service, misleading buyers and setting the designer-client relationship up for conflict. The following is a list of things I think every potential web design client should know before getting started with a project: I would say that at least 90% of websites serve the specific purpose of delivering content. Although funcitonality and design are incredibly important elements necessary for a website to succeed, the content is really what it's all about. A common problem with web designer / client relations comes up when the client does not have content ready by the agreed upon launch date.  As someone looking for a new websites, you should really consider how many pages you want and what content should go on each page. You should also do some checking on the web and look for other websites you like. Take a closer look at what makes them appealing to you or the industry. Try to find some sample pictures and content ideas and bring them to your first meeting. That way you can be sure you get what you want, and help streamline the design process. You should begin work on your content right away.  So vital to a website's success, and yet so rarely discussed at length. It has been demonstrated time and again that you cannot market your product / business / website to everyone. As a business owner you need to spend time getting to know your target audience. As a web designer you need to get this information out of your client before you begin the design process. I find that it's usually best to start the first client meeting by asking them a good amount of questions about their business. Most of the time I'm working directly with the business owner and often times they love talking to people about their business.  As a client you should take a while and think about the demographic your business typically deals with. You should really know as much as you can about them and how they interact with the web. For example if you cater to an older crowd, they probably won't be impressed with big flashy techonlogy and might find it confusing. Take time to understand your user base. Make sure the website's design is catered to their needs. Although goals are mostly associated with new websites, they are important to have throughout the life of your website. For a beginning website, goals may be a bit hard to acheive. There are many factors that limit the sucess of new websites such as the Google Sandbox Effect, however without a set of goals it is too easy to allow your website to stagnate. If you have a blog you should set a goal for how frequently you'll post new articles. If you are going to be marketing your site you should set traffic goals throughout the life of your website. When you have your first meeting with your designer you should run your goals by them and see if they think they're achievable. Set reasonable, acheivable goals for yourself and your website from day one. All too often designers get carried away with the design side of the process. It's best practice to remind the designer or team you are working with what you really want from the website. How should it function, are you trying to... The design process should be heavily influenced by the websites desired functionality. Really think about what you want your users to do with your site. This fuctionality should be at the forefront of your mind during the design process. Always keep in mind what purpose you want your website to serve. If you appreciated this article, I would be very grateful if you would share it with your friends or leave me a comment. I'm just getting my start as a blogger and would love to hear what I could be doing better."
    },
    {
      "title": "How To Sign In To WordPress",
      "url": "/how-to-sign-in-to-wordpress",
      "date": "2011-08-11 00:00:00 -0400",
      "categories": [

      ],
      "body": "I've received a lot of questions recently on how to sign in to your WordPress Blog. This tutorial will show you how to sign in to your WordPress Dashboard whether you are using wordpress.com or a stand alone wordpress.org blog. This one is pretty straightforward. All you need to do is go to wordpress.com and you'll see the username / password boxes at the top left of the website. Go to the home page of your website, let's say http://www.mywebsite.com/ and in the URL bar add either /wp-admin or /wp-login.php. This would give you either http://www.mywebsite.com/wp-admin         or http://www.mywebsite.com/wp-login.php"
    },
    {
      "title": "Why Use WordPress",
      "url": "/why-use-wordpress",
      "date": "2011-08-11 00:00:00 -0400",
      "categories": [

      ],
      "body": "I decided to write this article (Why Use WordPress)  because over the last year I have become a HUGE WordPress fanatic. I use it everyday, I love it more than I have ever loved a piece of software. It is beautiful easy to use, customize, theme and develop on. I truly believe that every website should be using a Content Management System  and most websites should be using WordPress. This article is intended for: If you are in the market for a website, Wordpress should really be something you look into. Especially for people who are newly joining the world of webmasters, the process of maintaining a website can actually be very simple (or even fun!) depending on what sort of system you are working with. So many times I hear potential clients dreading the responsibility that comes along with maintaining a website. It is perhaps the most rewarding part of my job when I finish the website and show them how much of a breeze a WordPress site can be to update. WordPress websites are great if you want to easily be able to: The web is changing. It is no longer acceptable to merely put up a website and leave it for years. Design evolves, trends change and it is painfully obvious when your website hasn't received an update in a while. This is where WordPress comes in. Whether it's upgrading your theme, adding some new plug-ins or starting a blog, you can be sure your website will stay looking fresh with WordPress. The WordPress team is constantly putting out updates making the software run better and easier to use. Most of these changes are a simple click of a button and you can be sure your website stays fresh and accurate. You should consider moving your website to WordPress if you want to: Everyday I meet people who are already using WordPress but are unaware of just how powerful and easy to customize it can be. Although it comes out of the box as a powerful blogging platform and CMS it can be easily manipulated to serve any purpose you would like. You should spend more time with your WordPress website if you: Ok, before I start this I know I'm going to get flack for it, but that's alright with me. I've used Joomla and Drupal in the past and understand both their value as well as their importance in the website realm. That being said, I truly believe that 95% of website (not including e-commerce) would be better off switching to WordPress. I believe that all pros and cons aside, WordPress is the easiest Content Management System to grasp for the average user. Plug-in's are easier to install, themes easier to change, and content easier to manipulate. I know many people for example using Drupal that boast about it's speed, modularity and beautiful simplicity, but most websites aren't run by developers. They are run by users, and most of these users don't share our passion for web design. I believe you should consider switching to WordPress if you Additionally, I think people who disagree with my points on this subject should check out the article 6 Things Dissenters Don't Know About WordPress over at stylizedweb.com If you appreciated this article, I would be very grateful if you would share it with your friends or leave me a comment. I'm just getting my start as a blogger and would love to hear what I could be doing better. And let me know what I missed!"
    },
    {
      "title": "How To Upload Images To WordPress",
      "url": "/how-upload-images-wordpress",
      "date": "2011-08-12 00:00:00 -0400",
      "categories": [

      ],
      "body": "This is a tutorial on how to upload images to WordPress. There are two different ways to upload images to your website. One involves, FTP access and is only recommended for technically savvy folks, the other is the way images were made to be uploaded with WordPress and is very easy to do! Typically your FTP credentials are Host - ftp.yourwebsite.com User - Your Control Panel Username Password - Your Control Panel Password That's it! You're Done. If you Ever want to use this image again, you can skip steps 4 and 5 and insert into post directly from the 'media library' link in the top left. If you liked this post and want to see more like it, leave me a comment or share it with your friends!"
    },
    {
      "title": "WordPress Pages Disappeared",
      "url": "/wordpress-pages-disappeared-wordpress-how-to",
      "date": "2011-08-12 00:00:00 -0400",
      "categories": [

      ],
      "body": "Have Your WordPress Pages Disappeared? This How-To is for people who have just moved a WordPress website from one server to another and have come to find that their posts and pages have disappeared. I just moved a full WordPress website from a Dreamhost account to a GoDaddy account and had this happen. If you're having a similar experience and your WordPress pages have disappeared, try doing the following: I hope this helps! Want to see more of these how-to's? Leave me a comment or share this with your friends. That way I'll know someone is listening out there!"
    },
    {
      "title": "Sliding Doors CSS With (up to) 3 Images",
      "url": "/sliding-doors-css",
      "date": "2011-08-19 00:00:00 -0400",
      "categories": [

      ],
      "body": "Have you ever designed a great button and wanted to convert it to css? Do you have a Photoshop button that you would like to grow and shrink around the text it's containing? Do you know exactly what the sliding doors technique is but are having trouble understanding how to use it? Well then, this (may) be the tutorial for you! Let's take a look at an example. A while back someone showed me this image: They told me they wanted to use it for titles on a WordPress website. The problem is that Wordpress titles are generated dynamically and therefore you can't depend on titles being a certain width as they will change. What you don't want happening is this: or... This is where sliding doors comes in. Here's the basic idea: Alright, you have all gotten through the theory and are ready to get something done already! Let's get started on the code, feel free to copy it and use it freely in your own work. Did you like the tutorial? Hate it? Learn from it? Did it confuse you? Share with your friends or let me know what you did and didn't like! I'll really appreciate it."
    },
    {
      "title": "How To Install WordPress",
      "url": "/how-to-install-wordpress",
      "date": "2011-08-22 00:00:00 -0400",
      "categories": [

      ],
      "body": "Alright, so you want to start using WordPress. Just one problem right? How do you install WordPress on your Web Server? No worries. We're going to cover all the possible ways to install WordPress on your web site. Before we get started, let's make sure you're ready to start your journey into the wonderful world of WordPress. Before we get into the guts of the WordPress install, let's make sure you're in the right place. If you don't have a domain name or a web host, you either need to get these things or try a free hosted blogging solution like Wordpress.com or Blogger.com.  In fact, if you are missing any of the things on the above list, you should read my post on The Things You Need To Have Your Own Website. Also, if you're looking to install WordPress as quickly as possible, you should check to see if your web host offers a free 1-click install. I know a lot of popular hosts such as Dreamhost, Bluehost and Media Temple offer easy to use 1-click applications. If your host offers this, you should be able to navigate to the appropriate area, click the install WordPress button and follow the steps on your screen. Alright, so this is really the only hard part you'll face while installing WordPress. I'm going to give you an overview here but if you have any specific questions, leave a comment with the name of your web host and I'll show you specifically how to set one up. Personally, I use FileZilla for my FTP client. It's Fast, Free and Open Source. In order to connect to your web host, you'll need to know your Host, User Name, and Password. *These will not necessarily be the same as your MySQL information Typically, when you sign up with your hosting company you'll either be given, or asked to set-up FTP information. Most of the time your host is going to be ftp.yourdomainname.com. At this point you should have WordPress Unzipped, Your FTP Client opened and connected to your web server and your MySQL Database information readily available. Now it's time to head on over to your website. Go to www.yourwebsite.com and you should see a screen like this one: Click 'Create A Configuration File' Now you'll be presented with a screen like this one: Click 'Let's go!' and you'll see this screen: This is where you'll enter your MySQL information that luckily you have written down right next to you! Right? After you complete this form, all you have to do is pick a title for your website and a username password combination. Then You're Good To Go! I know there are a lot of moving parts here, if anything looks different for you or you're having problems, leave a comment with your question and I'll get back to you as soon as I can."
    },
    {
      "title": "What You Need To Have A Web Site",
      "url": "/what-you-need-to-have-a-web-site",
      "date": "2011-08-25 00:00:00 -0400",
      "categories": [

      ],
      "body": "So you want to have your own website? Let's say you've made up your mind that you want your own website. I know from personal experience that getting started is a daunting task. Allow me to simplify things for you... Here is the short list of what you need to have a web site. I'll delve into more detail after. A web host is a computer that's constantly connected to the internet. It hosts your files and allows them to be accessed via the internet. Let's break web hosts down into two different categories. Free and Paid. I'll cover each type briefly and go over the pros and cons. There are a number of services that offer free web hosting. Typically these services also come with easy to use tools to help you create your website. These can be good solutions for getting your first website, but they do come with drawbacks. Blogger Facebook Wix Zymic XtreemHost Paid web hosting is really the way you want to go if you want people to take your website seriously. Keep in mind that paid web hosts and free web hosts are not mutually exclusive of eachother. Particularly services like Blogger and Facebook are great free tools that can be used to market your paid web site. Dreamhost Bluehost Media Temple If you want people to take your website seriously, and it isn't just a blog, you should go with a Paid Web Host. If you're just going to be blogging, it might better to get your start with a free blogging platform such as blogger. This one is pretty straight forward. As we already covered a web host is a computer that holds the files we view as websites. Now, the way the world accesses these files is by opening a web browser and pointing it at the computer via its IP Address. Can you imagine a world where instead of typing in http://www.google.com we had to type in http://74.125.225.20/ (try it! it works). Pretty tough to remember, right? The answer to this problem comes in the form of domain names. Again, to over-simplify, a domain name allows you to have a unique set of characters and numbers that can replace your host's IP Address and allow people to more easily find your website. Very similar to web hosts, domain names can be acquired for free but there are drawbacks. If you get a free domain name it will most likely be a sub-domain or an extension (something like yourname.blogger.com or blogger.com/yourname). Again, this makes your website seem less professional and you don't get many of the Search Engine Optimization benefits you would have if you bought your own domain name. On the bright side of things, domain names are cheap! They cost about $10 per year and are worth every penny! Some people say it's best to buy your domain name from a separate company than the one you use for your hosting. This certainly has its advantages but if you're really just looking to simplify things you probably should just buy them both at the same time. Additionally, companies like Dreamhost (mentioned earlier) usually throw in your domain name for free when you sign up for a hosting account. Alright, now you're all set up with a hosting account and have purchased your own domain name. The last thing you need is a web site (the files you put on your web server). This really could / should be its own thread but let me sum up a few different routes you can take to achieve this: I know a lot of this information may be hard to swallow for someone new to the web design world. If you have any questions, leave me a comment and I'll do my best to get back to you within 24 hours!"
    },
    {
      "title": "What is CSS And How Do I Use It",
      "url": "/what-is-css-and-how-do-i-use-it",
      "date": "2011-08-26 00:00:00 -0400",
      "categories": [

      ],
      "body": "Hello everyone. Today we're going to be talking about CSS or Cascading Style Sheets. I remember very clearly how confusing CSS was to me when I was just starting off with web design. This post is designed to give you a little history on CSS and then point you in the right direction to start learning how to use them. We're going to break this post into 4 categories. If you're looking for a quick answer, here's a table of contents to help you find it fast.  According to the Wikipedia Article, CSS or Cascading Style Sheets is a Confused yet? As with many Wikipedia articles, they are written by experts in the field and often times come off a little too technical for the average person. Let me simplify things for you. When you are designing a web page, the first thing you'll want to do is create the HTML. HTML stands for HyperText Markup Language and often looks a little something like this: Now, the HTML is what your website looks like to search engines. It should be clean, well formatted and everything should be named semantically. Let's quickly cover what I mean by naming things semantically. Let's say you wanted to have two sections on your website. One of them being your main content area and the other being your sidebar. It would look something like this: Just take notice, my main content area is named? You guessed it! \"main_content\". All too often I start working on someone else's project just to find that they named there elements things like \"main-2\" or \"area_left\". Make it easy for yourself and name your elements intuitively so you'll always know what they're doing! Now, if you run the code above you'll notice that the area we named \"sidebar\" is just showing up right below your main content. That's obviously not what we are looking for. CSS allows us to take an HTML document and specify color, spacing, size and position (and so much more!).  With the millions and millions of web sites on the internet. Can you imagine how boring and difficult to use they would be if they were all white pages with plain black text? CSS allows us to do two major things: It's been a long time since the only tools we had to style the web were tables and images. We can now control the look, feel and functionality of every aspect within our web sites. This is a great tool, even if you don't want anything artistic or stylized. For example, take a look at Google. They have a very simple, plain, easy to use interface, yet that is all made possible by Cascading Style Sheets.  Alright, we're past the introduction and we now know why we use CSS and what it can do. Let's actually start doing some! In my opinion, the absolute best place to get started learning CSS is w3schools.com. They provide a completely free, interactive learning approach to many web languages. Honestly, it's how I got my start in the business. Their tutorials are easy to use and fun. Check out their Introduction To CSS Tutorial Here! I remember this being somewhat of a hiccup when I was first getting my start. I played with the w3schools examples and had a lot of fun, but I couldn't figure out how to actually get started on my own. Writing your own CSS  can either be done locally on your computer, or on a web server.   1. Now open your \"style.css\" file and start adding CSS! 2. Save both files and then refresh your browser (F5) 3. There you go!  After you've finished getting your feet wet with CSS, you should definitely check out my personal favorite CSS web site, CSS-Tricks. CSS-Tricks is a wonderful blog curated by Chris Coyier who is one of my favorite designers. Not only does this blog have tons of great free information, but it also has an incredible forum community where you can go to ask for CSS help. I hope this articled helped in answering your questions. If there is anything I missed or anything you'd like to see more of, drop me a comment below and I'll get right back to you!"
    },
    {
      "title": "How To Edit WordPress",
      "url": "/how-to-edit-wordpress",
      "date": "2011-08-28 00:00:00 -0400",
      "categories": [

      ],
      "body": "Are You Ready To Get Started Editing Your WordPress Site? Let's dive in! This tutorial focuses on people with WordPress.org websites, not the free hosted WordPress.com! Just wanted to let you all know right out of the gate what we're going to be talking about. If you want to edit your WordPress site you need to take one of two approaches. They are: Before we start this tutorial, there are a few things you'll need to get going. Alright, now that you have the necessary software, you can begin editing your WordPress website! Let's Fire Up FileZilla, you should see something like this: Now you need to enter your FTP information and connect. When you're all connected you'll want to follow this filepath: You'll want to replace www.yourwebsite.com with your url. Also *yourthemename should be replaced with whatever your actual theme name is. If you aren't sure what your theme is names. Head into your WordPress dashboard and go to Alright! Now we're in the proper folder and ready to start editing your theme. I'm not going to get too far into how WordPress works but I will cover a few of the PHP files and what purposes they serve. + 404.php - The generic 404 page. This page is called whenever someone types a url or clicks a link to a page that doesn't exist on your website. + archive.php - This is the page that is called when someone clicks on your blogs archive + category.php - This is the page that is called when someone clicks on your blogs categories or a specific category + footer.php - The footer of your blog. The footer will be appended to the bottom of every other WordPress page + functions.php - This file holds the code defining the core functionality of your theme. If you ever see a tutorial on how to add something like image thumbnails, custom widget areas, etc that code goes in here. + header.php - This is the header for all of your WordPress Pages. Inside you will find your meta info, page title, and other things. This will be appended to the top of all of your pages.   + index.php - This is the default page for your blog. If you specified a static homepage, this page will control your /blog page. Otherwise this will be the content on your main page. + page.php - This is the default template for any static pages you make on your website. If you add a new page and write something in it, this template will control how it looks. + single.php - This is the default template for any single blog post. index.php controls the entire blog and single.php is what displays when someone clicks on an individual post. The first thing you have to do is log in to your WordPress Dashboard. You can get there one of two ways: Either way will get your there. Once you're logged in, click the appearance tab and then click editor. You should see something like this: From this point on, editing your WordPress files will be very similar to doing so with an FTP client. For more information on the individual files, look above as my WordPress files list still applies to this method. I hope this helped!"
    },
    {
      "title": "Freelancers: How To Prepare For A Meeting",
      "url": "/freelancers-how-to-prepare-for-a-meeting",
      "date": "2011-08-30 00:00:00 -0400",
      "categories": [

      ],
      "body": "When I first got started as a freelance web designer, meetings were the most nerve racking thing for me. Get me behind a computer with a text editor and a program to work on, I'm happy as can be. However, sitting down with a large group of new people and selling myself to them, well that's a different story. So, I've compiled a list of ten easy to follow steps that will guarantee you more success in your future meetings with clients. Make Sure A Meeting Is Necessary Often times, you should be able to touch based with and qualify a client over the phone or email. Before setting up a face to face with a potential client, go over a small checklist to make sure a meeting is really worth your time and that of your client. For my industry (web design), I like to make sure every potential client is ready to purchase a website, has sufficient funds to afford my services and that the person or people I'm going to be meeting with have the authority to make a final decision. Do Your Research I like to learn as much as I can about a potential client and their industry before the first meeting. What type of business are they in? Who are their competitors? Who are their customers? What services do they offer? I even like to read a bit about the company history. It's good to get a solid feel for who you are dealing with and what they might need from a website. Know Your Client Every client or potential client has a different personality. To be a good salesperson, you should be able to customize your pitch around your client. You really should walk into a meeting blind and hope for the best. In the emails or phone calls prior to the meeting, try to ask a few prodding questions in order to get a better idea of what type of personality your client has. Also, you can do a quick Google search and see if your client is on Facebook, Linked-In, Twitter, etc. Take a few minutes and get a feel for their personality. Are they a no-time-to-waste, make it snappy type person? Or are they looking for a relationship, someone who will take things slowly and make them feel comfortable through the whole process. Arrive Early If the meeting is taking place at your clients office, this may prove difficult to do. However, if the meeting is at their office, it's still a best practice to arrive a few minutes early. If the meeting is at a public place like a coffee house or bar, you should arrive at least 15 minutes early and make sure you are prepared. Pick out a table, order water for everyone attending and practice your sales pitch in the environment where it will actually take place. Bring Nice Supplies Physical props make great sales tools. This is just a simple fact of the business. Spend a long time designing and creating your props and they will pay off in the long run. If you do this correctly, you can use the same props for every meeting and only make minor tweaks. For my business, web design, I like to have a nice laptop, high-definition print outs of some of my best work, a well designed and aesthetically pleasing contract, a nice leather folder to keep my supplies in, and a great pen! It's a great tool and makes clients feel a lot more comfortable when you hand out supplies that look great and get information across efficiently. Be Conversational Remember, your clients are there  to talk with you. They haven't agreed to sit through an hour long presentation. Also, you have to understand that your clients needs truly matter. Yes, you are the expert in the field, but most of the time your clients do have a good idea of what they are looking for. I like to start my meetings off by asking the client questions about his / her business. This does two things for me. One, I get the conversation started in a field they are comfortable talking about. Two, I get to learn a lot about my clients company, their customers, their wants and needs without asking the questions directly. Have An Agenda I know this may seem like it contradicts with #6 Be Conversational but it doesn't have to! While it is important to keep the conversation flowing and feeling natural. It's also a good idea to keep a bulleted list of agenda topics with you just to make sure you discuss everything that needs to be talked about. Be Ready For Questions and Objections Any good salesperson relishes questions and objections. They are a great opportunity to show a client just how good your product or service is. In order to be a superstar in your meetings, take a good long while to think about and write down any questions or objections your client may have. Additionally, keep a running list of questions you've been asked in the past and how best to answer them. Don't hope for the best, be prepared for reality. Take Notes I think we've all been there before. You get done with a great client meeting and head back to the office. A few days later the client asks you a question and for the life of you, you can't remember what they're talking about. This will always come across as insulting and should never happen. Even during a fun, easy going meeting you should be diligently taking notes. If you have a hard time with this, bring someone else with you to the meeting, make sure you take good notes as it will help with all further interactions with that client in the future. Always End With A Next Step Remember, it is your responsibility to outline the next step(s) with your client.  Whether the next step is signing the contract, filling out your online form, another meeting or sending a check! You need to be up front in letting the client know what you expect from them. I like to take ten minutes at the end of each meeting to go over in detail what I'm expecting from them and what they should be expecting from me. Additionally, as soon as I get home from the meeting I send the client(s) an email covering it all again just to make sure we are always on the same page."
    },
    {
      "title": "New Poll Of The Month!",
      "url": "/new-poll-of-the-month",
      "date": "2011-08-31 00:00:00 -0400",
      "categories": [

      ],
      "body": "Hey everyone! So, I keep pretty good track of my blog's analytics. This gives me a pretty good idea of what browsers people are using on this site. However, with web browsers updating so regularly. I'm curious as to which one you're currently using and why! So... Either leave me a comment or cast your vote on the sidebar!"
    },
    {
      "title": "What Is The Best Web Browser",
      "url": "/what-is-the-best-web-browser",
      "date": "2011-09-01 00:00:00 -0400",
      "categories": [

      ],
      "body": "Warning - This article is subjective as all get out! If you're really looking for the best web browser, download a few of them and test them out. They perform similarly for the most part and you can feel free to choose any of them based on your personal preferences. For this article, I've broken web browser qualities into 4 main categories: Internet Explorer Original Release - 1995 Current Version - 9 Download From - http://windows.microsoft.com/en-US/internet-explorer/products/ie/home Speed Rating - 8 out of 10 Internet Explorer's speed is really unremarkable. It's just fast enough to not notice, without being noticeably fast... still following me? If you decide to go with Internet Explorer, speed won't be one of your complaints. Ease Of Use - 6 out of 10 Internet Explorer used to be, in my opinion, the easiest browser to use. With the update to IE 9 they seem to have thrown a lot of that usability out the window. If you want to change anything, there is a tiny little cog in the top right of the browser. Click it and good luck finding what you're looking for. Things It Can't Do - 4 out of 10 Ok, here is where Internet Explorer really breaks down under pressure. Without getting too technical, Internet Explorer's CSS Support is just terrible. Thankfully it's gotten better by leaps and bounds since the release of IE 9 but it's just dreadful. If you are using a version of IE earlier than 9, you are just not going to experience websites as they are meant to be experienced. Plain and simple. Extensions & Addons - 4 out of 10 Thankfully, with Internet Explorer 9 there actually are addons for IE. That being said, they are terrible and if you are the kind of person who likes the added functionality of extensions, you should really switch to a different browser. Mozilla Firefox Original Release - 2004 Current Version - 6.0.1 Download From - http://www.mozilla.org/en-US/firefox/new/ Speed Rating - 7 out of 10 Perhaps my only complaint with Firefox is the speed. It is an incredible, robust browser but compared to others like Chrome and Opera it's a bit sluggish. Ease Of Use - 9 out of 10 Mozilla Firefox is a real joy to use. I'm loving the new interface they rolled out with version 5. They provide you with a lot of options for customizing your browsing experience and the controls are fairly intuitive. Things It Can't Do - 10 out of 10 Find me something Firefox can't do. Seriously, find one thing. Extensions & Addons - 8 out of 10 Until recently, I think Firefox had the absolute best addons library available. Unfortunately, with stable releases coming faster than extensions developers can keep up with. Finding extensions that work with your version can prove to be a bit difficult. Google Chrome Original Release - 2008 Current Version - 13 Download From - http://www.google.com/chrome Speed Rating - 11 out of 10 Oh. My. God. Yes folks, that's right, Google's Chrome browser get's an 11 out of 10 rating for speed. It downloads in seconds and loads like you won't believe. Seriously, give it a whirl. Ease Of Use - 9 out of 10 Chrome is definitely the easiest to use of all of the browsers. Unfortunately, this is because it has the least amount of options. Things It Can't Do - 2 out of 10 Seriously, this is a big bone of contention for me. I fully understand that Chrome is meant to be lightning fast and easy to use, but it can't do certain web applications like printing Paypal labels. Also, if I see that \"Aw, snap. We can't find the page you are looking for\" more than 10 times a day, it stops being cute and starts making me mad. Extensions & Addons - 9 out of 10 Before Firefox got their extension area all screwed up they were my favorite. Chrome has consistently offered an easy to use extensions section. With the new frustrations brought by Firefox, Chrome has replaced it in my heart and is now one of my favorite browsers as far as addons go. Apple Safari Original Release - 2003 Current Version - 5.1 Download From - http://www.apple.com/safari/download/ Speed Rating - 8 out of 10 Safari's speed is right up between Firefox and Chrome. It's a fairly robust browser which slows down the loading time, but it's not so bloated that you'll be sitting there waiting for Google to load. Ease Of Use - 6 out of 10 OK, I'll admit it. I really don't spend a lot of time on Safari. The ease of use **may** be a lot better than I'm giving credit for. But it has that unmistakable *Mac* feel that sends me running for this hills. Things It Can't Do - 9 out of 10 Seriously though, even with my little experience with the browser. Safari is awesome! It really packs quite the punch and I don't think you'll be disappointed. Extensions & Addons - 10 out of 10 Wow oh wow. Only Apple can make pages this sweet. It is truly a joy to go shopping for extensions at on Apple's website. Trust me, it's awesome."
    },
    {
      "title": "10 Best WordPress Plugins",
      "url": "/10-best-wordpress-plugins",
      "date": "2011-09-03 00:00:00 -0400",
      "categories": [

      ],
      "body": "In No Apparent Order Download From - http://akismet.com/ Purpose - Automatically reviews every comment left on your blog and deletes spam for you Cost - It can be free for personal blogs, but this plugin is seriously amazing and you should spend what you can on it! Notes - Akismet comes pre-installed with every WordPress installation. However It Is Not Active By Default. In order to activate Akismet, you need to go to their website and get an Akismet API Key. Download From - http://contactform7.com/ Purpose - Allows you to easily create and implement complex forms anywhere on your website. Cost - Totally free, but if you have the cash, you should send them a donation! Notes - Contact Form 7 is set up to only allow shortcode insertion, meaning that it can only go in posts and pages, not directly into your theme. However, if you want to insert it right into the code, you can always use the WordPress 'Do Shortcode' Function. Download From - http://wordpress.org/extend/plugins/google-sitemap-generator/ Purpose - A set it and forget it plugin that dynamically generates and updates your WordPress website's sitemap. This alerts search engines like Google when you add or edit a post or page and will help improve your search rankings. Cost - No cost, no work. Just set it up and rest easy. Notes - Make sure you look through the settings page just once when you activate the plugin. There is a lot you can customize and every option is explained well. Download From - http://flagrantdisregard.com/feedburner Purpose - Wordpress by default comes with its own feed. It can be found at www.mywebsite.com/feed. Feedburner is a great replacement service for the default feed. It is currently owned by Google and can be found at http://www.feedburner.com/. After you set up a feedburner feed, this plugin will help by redirecting your default feed to the new feedburner one. Cost - None! Notes - Before this plugin will work, you have to go to Feedburner.com and create a feed. It's easy to do but you need your Feedburner account name before this plugin can function. Download From - http://wordpress.org/extend/plugins/wordpress-seo/ Purpose - This is the ultimate, greatest, most amazing, all included (too far?) SEO Plugin on the market. It's written by Joost De Valk and is seriously awesome. It gives you full control of your meta titles, meta descriptions, keywords density, etc etc. If you want your website to do better in the search engines, there are only two things you need to do. First, you need to go start reading about what SEO is and how to optimize your website. Then you need to download this plugin and realize how incredibly easy all of that difficult sounding SEO work has become. Cost - Free, I don't even know how this plugin stays free but it does. When your website becomes an amazing success and your filthy rich, remember Joost De Valk and his amazing plugin that got you there. Notes - Why are you still reading this? Go grab the plugin already! Download From - http://wordpress.org/extend/plugins/wp-smushit Purpose - Many people aren't aware of how large, bulky images can negatively affect your web site. Smush.it saves you time and energy by automatically shrinking (or smushing) every image you upload via your WordPress Dashboard. It doesn't ruin image quality, or change the size. It just makes them more efficient for posting on the web. This will increase your page loading times and ultimately lead to better rankings in the search engines. Cost - Free again, seeing a pattern? Notes - Nothing to it, just install >> activate and never worry about it again. Download From - http://www.bravenewcode.com/store/plugins/wptouch-pro/ Purpose - This simple to use plugin automatically creates a smartphone ready version of your WordPress website. A recent statistic from HubSpot states that 35% of American Adults Own Smartphones. It is important both for usability and your Search Engine results that you have a website which caters to people using smartphones. This plugin does it all for you. Cost - They do have a free version, but for the professional version it is $39 - $199 depending on how many web sites you want to use it on. Notes - Make sure you check out the settings page after activating the plugin, there are some really handy utilities for customizing the appearance of your site on cell phones. Download From - http://wordpress.org/extend/plugins/syntaxhighlighter Purpose - This plugin allows you to easily embed source code into your WordPress posts and pages. This is otherwise very difficult to do, but it's all made easy with Syntax Highlighter. Cost - Totally and 100% free Notes - Again, take some time going over the settings for the plugin. You get to pick the color scheme, line numbers, etc. Download From - http://wordpress.org/extend/plugins/wp-db-backup/ Purpose - This plugin allows you to have your entire WordPress website automatically backed up as frequently as you'd like. It can either be saved to your server or emailed to you. Don't risk not having a backup of your web site. WordPress web sites get hacked every day, make sure you're prepared with this nifty plugin. Cost - Free, and easy to use. Trust me on this one and go grab it. Notes - Personally, I think you should always set this plugin up to email you the database as opposed to saving it on your server. In the event that your site does become compromised, why risk having you only backup on the server that someone has already broken into. Download From - http://wordpress.org/extend/plugins/sharebar/ Purpose - This plugin gives you a Mashable esque social networking bar on the side of every post. It is easy to set up and follows the reader down the page. We all know that Content Is King but if you already have good content, make sure you give your readers an easy way to share it with their friends. Cost - Absolutely Free. Notes - The settings on this plugin take a minute to get used to, make sure you spend a few minutes back there getting the hang of it."
    },
    {
      "title": "WordPress Theme Review: Twenty Eleven",
      "url": "/wordpress-theme-review-twenty-eleven",
      "date": "2011-09-03 00:00:00 -0400",
      "categories": [

      ],
      "body": "Alright, before we get too far into this review. I should let you all know that I rarely, if ever, spend a significant amount of time checking out the default WordPress themes. Most of the work I do involves creating custom themes. Therefore I typically build the theme on my computer, install WordPress on a new host and immediately overwrite the existing theme. The other day, my girlfriend  who also is a WordPress theme developer wanted a personal blog. Wanting to start blogging before spending the hours developing a new theme, she just installed WordPress with the default theme and got to work writing. Let me just say right now, if you're just looking for a brief review of WordPress' new Twenty Eleven theme. It is Amazing! **** Not all of these features are exclusive to Twenty Eleven, a lot of them were also present in WordPress' Twenty Ten theme. However, this is a list of my favorite features that come with this theme: As you can see, the Twenty Eleven theme is simple and easy to read. The images at the top are easy to swap out via the WordPress Dashboard and can be customized to display different images based on featured image or category. Warning! The image below is not my comment field. Just a picture of the Twenty Eleven Comments Field. Don't be fooled. This is the out-of-the-box comment form for Twenty Eleven and I just love it. As you click inside the boxes, the tabs in the top left disappear. I've never seen this effect pulled off so well before. If you are just starting a new blog. I really recommend going with the default Twenty Eleven theme until you are ready to design / purchase a high-quality custom design. It can do everything needed to set you up with a successful blog. I really recommend giving it a try!"
    },
    {
      "title": "Why You Should Retweet",
      "url": "/why-retweet",
      "date": "2011-09-04 00:00:00 -0400",
      "categories": [

      ],
      "body": "Honestly, my recommendation for people just now signing up with Twitter is just to ignore all of those factors. Follow who you want to follow, say everything and anything you feel like saying. There are so many millions of people on Twitter that you're twitter account will succeed if you just stay active and be yourself for a few months. Ideally, if you follow my aforementioned advice and just be yourself on Twitter you will end up with a group of followers who share your world views. This means that there is a great chance that anything you like, hate, find funny or are just glad you read will illicit the same reaction from your followers. So, it is my personal opinion that whenever you see a tweet or read an article that you enjoy, you should retweet it immediately and without hesitation. Still not convinced? Let's go over a few more reasons: Now, make my day, change my life, and encourage me to keep on blogging by tweeting this article to your awesome followers. Thanks for reading! Click the tweet button!"
    },
    {
      "title": "What Should Every Website Have",
      "url": "/what-should-every-website-have",
      "date": "2011-09-08 00:00:00 -0400",
      "categories": [

      ],
      "body": "Well here we go. These are five things that should be found on every website. No matter what purpose your web site serves, it's always vital to have a nice looking contact form that can be easily found from any page. Having a potential client or customer contact you means you are half way to conversion. How much money do you think you're missing if people can't find an easy way to get a hold of you? Another great way to turn first time visitors into loyal customers. Most people are incredibly immersed in the social world, why not give them a way to keep in touch with you or your company. Social networking icons should be easily found on every page, as they not only provide your web site with free marketing, but they also provide your web site with social proof. No one wants to follow a faceless company. Let your readers know more about you! Give your about page a personal touch, tell your readers who you are, where you're from, what you like and why you have this website. People like to see the human side of any business, making an about page a necessity for any web site. This is an absolute must for every web site. Landing pages are especially important if you are doing any sort of marketing. A landing page is a page on your web site that briefly explains your product or service, and offers some type of conversion form. Don't expect visitors to click through all of your links just to get to your contact page. Direct them to a page that has everything they need and encourages them to follow through with whatever your web site's next step is. Design is great. Art and Design can really help distinguish your web site from all of your competition. However, make sure that your content is easy to read. All too often I stumble on websites with a beautiful, artistic feel, but then I leave because reading their content strains my eyes. No matter what your sidebar or header look like, give your readers a break in the main area. Remember, Content is King. If not, it really should. If you think of anything vital that I missed, let me know in the comments and I'll be sure to add it!"
    },
    {
      "title": "Alexa Sucks and Here's Why",
      "url": "/alexa-sucks",
      "date": "2011-09-11 00:00:00 -0400",
      "categories": [

      ],
      "body": "As a member of the Web Design & Search Engine Optimization industry, Alexa is one of my least favorite topics of discussion with clients. I pride myself on being a man who has the answers. I'm more than comfortable answering questions like: But one of the few questions I just can't answer is, why is my Alexa rank so low? The best answer I can come up with is, because Alexa Sucks. I was recently hired by a Japanese toy store to run a social media campaign. Their store gets a good amount of traffic (3,500+ unique visitors per day) and their Alexa rank is terrible (1,042,039 at the time of this article). They were very concerned about their Alexa rank, apparently some of their potential investors wanted to justify the investment based on their rank alone. I explained to them that at best Alexa provides a biased, incomplete, seemingly arbitrary review of most web sites, and that it's ridiculous that any professional would give any credibility to a web site's rank. The conversation went over well and they decided to give up on the idea of improving their rank. That is, until we launched a small forum for their customers and with only 200 or less hits a day, the forum's Alexa rank skyrocketed to 500,000. Let's Review: **The Store, which gets 3,000+ unique hits per day** **The recently launched forum, which gets less than 200 unique hits per day** Granted, by necessity, Alexa is an imperfect service. However I think that it is inexcusably flawed and biased. Here is where Alexa is flawed beyond repair: Here's the thing. As a company, Alexa is actually fairly innocent and doesn't deserve much of the contempt I have. The real problem comes from third party applications using a web site's Alexa rank as a reliable means to grade the web site. Companies like BuySellAds, WebsiteGrader, and (rumored) Google use the Alexa's ranking system in their own algorithms to determine popularity. So, the real problem is that other, important companies take Alexa's ranking system as a reliable means to learn about a web site when it clearly is not. I'd love to hear your thoughts if any of you have had experiences with Alexa's ranking system whether they've been good or bad. I'd like to update this post with a few more case studies and try to figure out if I've just had bad experiences or if there really is a problem that needs to be addressed."
    },
    {
      "title": "Horizontal CSS Menu",
      "url": "/horizontal-css-menu",
      "date": "2011-10-14 00:00:00 -0400",
      "categories": [

      ],
      "body": "If you're looking to make a horizontal menu for your website using CSS & HTML this tutorial will show you how. Let's start with the HTML. You're going to want to select anywhere in the body of your HTML file that you want the menu to go and insert something like this: This is just your basic unsorted list (<ul>) with as many or as few list items (<li>) as you'd like. Since this is going to be a navigation menu, let's go ahead and make sure all of those list items are linking somewhere. Now your code should look like this: Now, you'll want to replace the # with the link that you would like. For my website I would make the home link http://www.insitedesignlab.com and the contact page http://www.insitedesignlab.com/contact so they would look like: Alright, now we're done with the boring part and can turn that unsorted list into an awesome horizontal navigation menu. Now we are going to stylize the unsorted list using CSS and turn it into a menu, if you're not super familiar with using CSS to style HTML, pause here and check out my post on what is CSS and how to use it. As long as you understand how to apply CSS to HTML and are set up to do so, we can go ahead and get started. The first thing we'll need to do is make the list horizontal. It's really all we have to do to technically have a horizontal CSS menu but we'll do a whole lot more for good measure. As I said, all we technically have to do is apply a simple float to the list items. Something like this will do: Now, doing this poses two problems: These can be fixed very easily by adding: And there you have the basics of a horizontal css menu. Just for fun, let's add a bit of style to it: And there you go! Your very own horizontal menu built in HTML and CSS. Feel free to just copy and use my code for anything you are working on, commercial or otherwise. Good Luck!"
    },
    {
      "title": "How To Add CSS To A Link",
      "url": "/how-to-add-css-to-a-link",
      "date": "2011-10-14 00:00:00 -0400",
      "categories": [

      ],
      "body": "Styling links is pretty crucial for the modern web designer. Fortunately, it's quite simple to do so let me show you how. First, you need a link. Any ole' link will do, so let's create one. For those of you new to HTML, note that the website you are linking to must be surrounded by quotations and inside what we call an anchor tag. If you want your link to point somewhere other than Google, simply change the web address within the quotes and change the text to whatever you'd like. One of the tricky things when you start learning CSS is how to isolate a particular element or group of elements such as the link we just made. You can use CSS to style all links for the entire website with something like this: the a before the curly bracket is a selector used for all anchor tags. Basically that snippet of CSS is telling your web browser to render all anchor tag text red. This may be what you are looking for, but more often than not you want to only stylize an individual link or group of links with CSS. There are a few ways to do this. Perhaps the easiest way to do this is to wrap the links you want to select inside an HTML element. For this example let's use the HTML div element to style a particular link. The HTML looks something like this: Let's take a brief look at this. Unlike last time we now have three different links. However the middle link is wrapped* inside this \"div class individual\". That allows us to do something like this in the CSS: *Also, this time I substituted the # key for an actual link, feel free to change it to whatever it is that you need. Now we can leave all of the other links alone and tell the browser to only change the color of links that are inside the individual class. If you were to run that code you would just see two standard links and a red link in the middle. Now that we have some proper markup and the ability to only grab the links we want, let's style them. Some of my favorite things to do to links are: Alright, let's break this one down. You should be all set! Ask if you have questions and be sure to check out this awesome CSS reference list for more CSS ideas."
    },
    {
      "title": "Creating A Great CSS Button",
      "url": "/great-css-button",
      "date": "2011-10-15 00:00:00 -0400",
      "categories": [

      ],
      "body": "Looking for an easy way to make great looking buttons using HTML and CSS? You've come to the right place. We're going to cover both creating your own great looking css buttons as well as some great web applications that allow you to build a css button without writing any code! In order to get started, let's do a little bit of HTML. All we really need to get started is a simple HTML class that we can use every time we need to call on our sweet CSS button. Let's get started with a bit of HTML like this: Now that we have the basic HTML to work with we can get started with the CSS. And there you have a sweet grey button all in CSS! We use border radius to give the button rounded edges, box shadow to give it a 3-D look and the rest is just standard CSS. Out of all the generators out there, I have three favorites when it comes to building CSS buttons. They are as follows: This Button Generator available at Chris Coyier's CSS Tricks website is the best in my opinion. You can choose colors, use gradients, control size and so much more. Plus the out-of-the-box button looks great too! This Button Generator takes a more Microsoft-centric approach to the CSS it uses but they are both valid and awesome looking. This generator has more options but I find it more complicated to use. And last but not least, CSS Button Maker provides another easy to use approach to generating good looking CSS Buttons. Alright, now go make some sweet buttons! If you make any that are totally awesome, be sure to send me a link in the comments! As usual, feel free to use any and all of the code in this tutorial in any capacity you would like, including commercial."
    },
    {
      "title": "Introduction To CSS Forms",
      "url": "/introduction-to-css-forms",
      "date": "2011-10-15 00:00:00 -0400",
      "categories": [

      ],
      "body": "Forms are pretty awesome, but who wants to fill out a boring one? It's easy to customize your web form, even if you don't know a lot about HTML and CSS. To start, we need some sort of basic form. If you've already got one on your site, feel free to use it. Otherwise, I made a basic form for the sake of this blog post. It should look something like this: That should display something like this:  E-mail    Now, that doesn't look so bad, but it could definitely use some style. So let's start adding some CSS. Let's try something like this: Now we should have something much nicer looking like this:  Name E-mail   Now that's a nice looking form! As usual, feel free to use this code in any project you are working on, commercial or otherwise. Feel free to change the colors around and leave a link in the comments if you make an awesome looking form and want to share. Good Luck!"
    },
    {
      "title": "Why Twitter",
      "url": "/why-twitter",
      "date": "2011-10-18 00:00:00 -0400",
      "categories": [

      ],
      "body": "With so many means of marketing your business, I'd like to talk about why Twitter deserves your attention. Twitter is an incredible marketing tool. Some of its biggest benefits are: Twitter allows you to connect with thousands of people. Giving you the chance to reach an audience that wouldn't be possible through local marketing efforts. Link sharing is one of the fundamental uses of Twitter. It is a good practice to tweet links to your latest websites or blog posts. With an effective Twitter campaign, you can easily drive hundreds of visitors to your site. No matter what business you're in, you can be sure that the experts in that field can be found on Twitter. Follow them, message them, and make a connection. This gets overlooked too often, but Twitter is perhaps the best free ( indirect ) learning resource currently online. Following the right people and blogs on twitter provides you with endless updates pointing you towards free articles. All that being said, Twitter does have its share of downfalls. Getting your start with Twitter is certainly a difficult process. It's not intuitive, its usefulness is unclear and  everything you do is public. I'm honestly not sure what the deal is here, perhaps it's just because Twitter is so popular but I constantly get error messages of the service being down and adding Tweet buttons to my websites has never worked 100% correctly. I'm not sure if everyone experiences this, but personally I feel so much pressure before every non link share tweet I make. Who's following me? Is this annoying? offensive? pointless? In the end I just decided to stop thinking about it and just write whatever I feel like, it's done me well so far. The point of this whole article is to show you why twitter is a must-have tool in your marketing arsenal. It's educational, and it can send tons of traffic your way. Plus, if you do it right it can be a lot of fun."
    },
    {
      "title": "Responsive Web Design - Praised But Unused",
      "url": "/responsive-web-design-praised-but-unused",
      "date": "2011-10-25 00:00:00 -0400",
      "categories": [

      ],
      "body": "Responsive web design is no doubt a hot topic for today's web designers. For those that aren't familiar with the concept it involves using A Fluid Grid, Flexible Images and CSS3 Media Queries to create websites that respond to screen size and adapt accordingly. Shameless plug -- Check out my new ( responsive ) personal website! To simplify, this means that you ( the designer) can create websites that rearrange and re-size content based on screen size. So, on a large screen you may want a big full content area and a large ad-filled sidebar. Whereas on a cell phone, maybe you want to drop the sidebar and just have the content area fit to fill the screen. Well? It's super do-able, check out those links! If you're looking for information on creating responsive websites, the three links above will be a great start. This is, however, not that post. This post is more of a question to the web design community. If Responsive Design is so great, and makes experiencing your website much better, then why aren't more people using it? More importantly, why are all of these blogs like A List Apart publishing books about how great the technology is, but not using it themselves? Now, I do get it. My website has >100 visitors per day. If I want to re-design it's really not a big deal. I can change the look and feel of the site and even a bit of downtime is not likely to affect anyone. I do understand that websites like A List Apart and Smashing Magazine don't have this luxury. I also understand that a lot more goes into developing websites with custom applications and tens of thousands of pages, but I think there is still a small point to it all. I suppose, to me, it seems the same as being lectured on how great American cars are by a race car driver that drives a Toyota. I mean, if they are really that great, and you really spend most of your time in your car / talking about web design than why aren't you using it? I mean, what better way to support a new technology than adopting it, right? I know, I know. Here I am talking about how much I love responsive design and how people shouldn't talk it if they aren't using it and I don't have a single responsive element or media query on my whole page. It's true. But but, not to worry. I'm taking my own advice and will soon be launching a completely re-designed and responsive website! It should be live by November 10th, 2011. That it all, does anyone actually read this thing?"
    },
    {
      "title": "Why Use Advertising",
      "url": "/why-use-advertising",
      "date": "2011-10-26 00:00:00 -0400",
      "categories": [

      ],
      "body": "We've all seen ads on websites. They vary from extreme to subtle, from abrasive to barely noticeable but their existence is certainly a reality. So the question becomes, why are websites using ads? How much money can you really make from them? And what are the drawbacks to having ads on your own website. Ultimately, the answer is simple -- website owners post ads on their pages to make money!  There are three main ways in which advertisements can bring you money as a publisher. Honestly, they all have their pros and cons. It really depends on your audience. Pay Per Click can result in huge payouts, but only if you have a lot of traffic. On the other hand, if you have a small, loyal following; recommending products with Affiliate Marketing might be your best bet. Pay Per Month is the most steady payout, but typically you need to prove your worth as a website before people are willing to pay monthly. $0.00 - $1,000,000,000 Seriously though, this question can't be answered easily. How much traffic to you get? If your website isn't very popular, you can count on only making small profits at first. However, there are a lot of success stories where people make easy livings ( $50,000+ ) off their own blogs. So making money is definitely a possibility if you are willing to put the work in. The main drawback in hosting ads on your website is losing visitors. This problem is two-fold: An example of my least favorite type of advertising, on one of my favorite websites! The idea being that you put your advertisement between the title and content on your blog posts. It is supposed to be the most effective place to put ads but at what cost? I understand that an awesome looking site like the one above needs to make income, and therefore they need to have ads. What I don't understand is placing ads in a spot where people will click away before reading your article. It just seems silly to me."
    },
    {
      "title": "Add Google Analytics To WordPress",
      "url": "/add-google-analytics-wordpress",
      "date": "2011-10-27 00:00:00 -0400",
      "categories": [

      ],
      "body": "Are you looking to add google analytics to your self hosted WordPress website? This tutorial will show you how. Google Analytics is a great way to analyze your traffic and WordPress makes it easy to use. Step 1. Sign Up For Google Analytics Head on over to http://www.google.com/analytics/ and sign up for a free account. If you already have a Google account, all you need to do is click the 'Access Analytics' button and sign in. Step 2. Sign Up Your Website After Signing up for your Google Analytics account. Click the + Add New Profile link and fill out your domain information. Step 3. Grab The Code Now you'll be taken to a screen where they give you a paragraph of JavaScript (don't worry!) and tell you to paste it into your site. It should look something like this: Step 4. Log Into Your WordPress Dashboard Now, head over to your WordPress dashboard. Go to www.mywebsite.com/wp-login.php and enter your username and password. Now click:Appearance >> Editor And look on the right sidebar for a file called footer.php click that and you should see something like this: Now, yours will have different code inside, but you get the idea. Step 5. Paste That Code Now if you scroll to the bottom of this file you'll see one of two things: A comment that says something like Don't Forget About Analytics Or, you'll see at the end of the file< /body> < /html> So you'll either  paste the code where the comment is, or right before the body html tags. Just paste it in and click Save File. Step 6. That's it! You're Done Now you're all done, go back to your Google Analytics page and it should say something like Gathering Data (It might take up to a few hours to recognize you've entered the code.) Anyway, check back in a few hours and you should be all set tracking your website! Have fun!"
    },
    {
      "title": "Great Web Design Tools",
      "url": "/great-web-design-tools",
      "date": "2011-10-27 00:00:00 -0400",
      "categories": [

      ],
      "body": "As I make my way though beginner designs and become more concerned with creating designs that look great on all devices and browsers I discover that I need a lot more tools than I previously thought. Let's take a look at some of the tools that make really great web design possible: Compass is a CSS Authoring Framework. In essence, it's a program that allows you to quickly write valid CSS. It's a really awesome tool that comes with a lot of great plugins. It's really worth checking out, as is this awesome CSS-Tricks podcast on how to use it. HTML5 Boilerplate is a professional badass's base HTML/CSS/JS template for a fast, robust and future-proof site. This is a boilerplate that supports ie6 as well as HTML5. It does it all, including mobile browser support. It's a truly great project run by some of the best web developers this world's ever seen. Modernizr is an open-source JavaScript library that helps you build the next generation of HTML5 and CSS3-powered websites. Modernizr uses Javascript for what it calls feature detection. Essentially it detects what browser the user is viewing your site with and what CSS and HTML features that browser can handle. Then it serves code that the browser can handle. If you're not currently using Jquery, you're missing out! Jquery is the Write less, Do more JavaScript library. It's a great front end tool that allows you to do most of your favorite JavaScript things way faster!"
    },
    {
      "title": "5 Reasons To Become A Web Designer",
      "url": "/5-reasons-to-become-a-web-designer",
      "date": "2011-10-28 00:00:00 -0400",
      "categories": [

      ],
      "body": "I've always been a fan of the arts. One problem I always had is I'm terrible at drawing / painting. Web Design is a great field that allows me to be artistic and expressive without having to pick up a pencil. Web design is a financially viable career that allows you do create and design and every company needs at least one. These days every company / individual needs a website. I wager it's not long before everyone needs at least two websites. You'd have a pretty tough time finding someone that didn't at least sort of want a website commissioned.  Whether it be a personal blog, e-commerce store or business page. Web design is in extremely high demand. Web design and the languages associated with it are evolving at an awesome pace. With the recent introduction of HTML5 and CSS3 it's truly a great time to be in the industry. There are also many sub-fields forming in the industry. You can design websites for phones, or websites that provide great UX to increase conversions. There's too  much for one person to master and more comes out every day. Being a web designer means you'll always have something to talk about when you meet new people. This relates to #2, wherein everyone needs a website. This means everyone you meet will want to at least figure out if you can help them with a web project they have in mind. This is probably my favorite reason of them all. Being able to make awesome, professional quality websites means you can take any business idea you have, and give it a successful public face. Having a top-end website already puts you ahead of the competition in most business fields. If you want to sell sell dog biscuits, go on and make the best looking dog biscuit store on the internet!"
    },
    {
      "title": "5 Reasons Websites Shouldn't Cost Less Than $1,000",
      "url": "/5-reasons-websites-shouldnt-cost-less-than-1000",
      "date": "2011-10-29 00:00:00 -0400",
      "categories": [

      ],
      "body": "I've been thinking a lot about pricing lately. One of my biggest disappointments is when clients don't have enough in the budget to purchase a design that would really benefit them. Whether it's design aethetics or great functionality, great websites aren't cheap and a budget under $1,000 is not reasonable. Now, I'm sure many of you in the design industry have heard something like this: But ask yourself this, do they really just need something basic? What is their site supposed to accomplish, and can it do so if it's poorly put together and doesn't meet modern day web standards? Another point I should make before getting into this list is that it's worth noting the difference between basic and minimal. A quick example that comes to mind is Google's interface. Often mistaken as basic, it is in fact extremely complex in its elegance and a major with for User Experience. Now to the list, here are the reasons websites should never cost less than $1,000 They should work well on every browser and type of device. In order to accomplish this you need to write media queries, use a flexible grid, do a lot of browser testing and perhaps even write multiple style sheets. These are important considerations for any website and take time to ensure they're working properly. Unless the people using the website are developers, every website should be built on a Content Management System or Framework that best suits their needs. Both the front and back end of the website should cater to their needs. It should be secure, easy to update and easy to maintain. This means no simple HTML & CSS Designs, but designs that work around sometimes complex dynamic systems. This again takes longer and requires skill that go beyond the $1,000 price point. We've all heard the following: \"I don't need to know how to do anything with it, just leave it as it is.\" but we all know the phone call a few weeks later, wanting something added, deleted or changed on the site. The point is websites need to be fresh, they need to stay current. Things are going to happen that merit a change on the website, and your client needs to be able to make those changes easily. Additionally, it should always be possible to add some type of web 2.0 functionality to your clients site. Adding a blog, forum or store to a site is common and you should make sure the site has the infrastructure to handle it. I saw this term at HTML5 Boiler Plate and really liked it. When building websites they should support a practical amount of old technology while simultaneously preparing for new tech. All websites currently being built should be prepared for the changes we know are coming in programming languages and browser support. This point covers two of my pet peeves. My first pet peeve is when you get to a site and find a spectacular landing page. But as soon as you go to move to the next page the entire design / structure falls apart. As a designer you should have been paid enough to make sure every page looks good and functions well. My second pet peeve is when I go to a not so popular section of a website - for example a blog's archive page - and find it completely un-styled.  Although these pages may be considered less important you should never underestimate the effect your coherency falling apart has on your visitors. So there you have it, I think these things are absolutely necessary for every website and they demand a reasonable budget. If you don't have the budget for these things, you should question whether you really need your own website, or whether something like a Facebook page would suffice."
    },
    {
      "title": "iPage Review",
      "url": "/ipage-review",
      "date": "2011-11-02 00:00:00 -0400",
      "categories": [

      ],
      "body": "In a word, terrible. To be perfectly honest, I cannot believe this company still exists. I've had three different interactions with them, one personal and two on the behalf of clients and in addition to appallingly terrible service, their business practices border on the illegal. However I'm getting ahead of myself, let's start at the beginning. I like to start all of my reviews with a positive note, so here it goes. As far as price goes, iPage is top-notch. Do not mistake me as saying they provide good value, but comparing the dollars per month you spend with iPage to another company almost guarantee's iPage the win. If you are a happy iPage client, there control panel is actually quite well organized and easy to use. The reason I docked two points is because they have one of those aggressive, sales influenced control panels in which they don't allow you to do things like: Instead, they try to redirect your attention to the positive. Showing you how many dollars worth of Google Adwords dollars and Security software you've gotten for free just for signing up. I'm not sure why no one has written about this yet, but iPage is terribly slow. I know how shared hosting works and that sometimes you just get unlucky. This however, is completely unacceptable and can be reliably expected from this company. Of the three websites I've worked on hosted by iPage, the average page load time was 5 seconds. There are a lot of varying reports on how long is too long but they seem to agree that no one waits more than 3 seconds for a page to load. I know this has been a pretty negative review so far, but this is where it really fell apart. The first time I needed customer support from iPage was over the 5 second page loads. As with most hosts, they don't provide a direct means to contact them, instead you have to fill out a support ticket. So I went through the motions and told them that the hosting package my client I bought was running way to slow and needed to be fixed. They responded by telling me that there wasn't anything wrong with the servers speed, and it must be something wrong with my internet connection. Big Mistake I politely responded by telling them that I didn't like being lied to, attaching a Trace Route, Google page speed analysis, and speed tests from three different network connections. After 4 identical conversations with their support team, it was clear I wasn't going to be helped in any way. A few years ago, I would have been so outraged I would have started a month long battle, demanding to speak to a manager, etc etc. However, I've lost a lot of my youthful rage and energy, so I just cancelled my account and moved to Dreamhost*. *Side note, dreamhost is an incredible hosting service, which I recommend. I'll be reviewing them shortly. About 10 months later, I receive an email from iPage saying that one of my domain names is still registered with them and will be renewed at the end of the month. I didn't want this domain, so I logged back into my iPage account and set the domain to manual renewal to make sure my account didn't get charged. Two weeks later, I get the same email from iPage. I log back in to find my account has been changed back to automatic renewal and is scheduled to renew in a few weeks. I set it to manual again, and get a hold of iPage support telling them I don't want the domain to renew. They tell me that it's all set not to renew and I don't have anything to worry about. Another two weeks go by and I receive an email from iPage that they went ahead and charged my card for the domain renewal and it was declined. Luckily, I lost my card a few months back and had to get a new one. I got on their chat outraged and yelled at them for putting me through all of this. They told me that they weren't sure what happened but that my account was officially cancelled and I didn't have to worry about hearing from them again. Seriously don't waste your time with this terrible hosting. If you want cheap hosting go with BlueHost, if you want amazing value go with Dreamhost and if you want incredible performance go with Media Temple. What are your hosting experiences? Share them in the comments!"
    },
    {
      "title": "Craigslist and Freelancer Are Killing Our Industry",
      "url": "/craigslist-and-freelancer-are-killing-our-industry",
      "date": "2011-11-03 00:00:00 -0400",
      "categories": [

      ],
      "body": "It isn't often that I pop on websites such as Craigslist.org or Freelancer.com but today I did and what I saw made me sad. Companies hiring SEO consultants at $8.50 per hour, WordPress themes being bought and sold at under $200, and everything I love in this industry being devalued. Consider this a call to action for you poor souls out their who have become so convinced of your lack of worth that you consider providing your professional services at Taco Bell prices. Don't get this twisted as coming from a place of fear. I have no concern for my place in the web design industry, because I know what my services are worth and have no problem convincing the world that I'm right. The only concern I have is for what I like to call the Fast Food Effect coming to the design industry. Fast Food Restaurants have flooded our towns and cities, slinging their disgusting food for rock bottom prices resulting in, well, a shift in the quality of food we eat. Now, premiere restaurants with great chef's certainly aren't suffering because a new McDonalds opened up down the street, so you may be asking yourself what harm this causes. Well I'll tell you. The harm is done to the poor kids who end up working in these crap holes, and more importantly to the general public who grow up thinking that McDonalds and Taco Bell are suitable replacements for food. Let's tackle these one at a time. Now, in our country unemployment is at an all time high, which simply means that back in the day there were more jobs available per person than there are now. I want to get that out of the way so no one tosses up the \"Hey, but they create jobs, right?\" argument. If children weren't getting their first jobs slinging burgers at some greasy smelly fast food joint, they would be getting entry level positions at jobs that actually have  room for upward mobility. No one gets a job at Taco Bell because they want to become a chef one day, they do it because we've let those filthy shops overrun our towns and now there's nothing left. There are few things that I appreciate and enjoy as much as a good meal. However, McDonalds and Taco Bell are not food. By definition, food is: any nourishing substance that is eaten, drunk, or otherwise taken into the body to sustain life, provide energy, promote growth, etc. And we know for a fact that fast food does not nourish and cannot sustain life. So the real problem becomes the general public is saddled with the misconception that the crap they eat everyday is food. Many don't get to appeciate the joy of quality food nor the feeling of a chemical and fat free existence. The same principles apply to almost any industry. But perhaps none so much as web design and internet marketing. Take a company hiring an SEO Expert but only willing to pay $8.50 per hour. Unless our economy gets a lot worse, there is no chance someone possessing the skills and experience that go along with true Search Engine Optimization is going to fall so low as to take a job for $8.50 per hour. It just doesn't happen. Leaving one of two possibilities. In an ideal world, the company would go weeks or months without a single reply to their post, and eventually stumble to the conclusion that if they want an SEO expert, they are going to need to shell out a fair wage. Much more probably however is that the company will get at least one application from someone who knows little more than what the acronym stands for and hire what the believe to be an SEO expert. Months later they will see little to know improvement in their rankings or websites, and like so many others will begin to see the field as a joke, devaluing the industry. Web Design is no different. I'm sure we've all noticed the influx of crappy cut-out websites popping up on the internet. Websites like Wix pose no direct threat to web designers but they inarguable cheapen the industry. I Don't.  Why would you want to? There is no trick to having a cheap website. If you pay 50% less than your local firms are charging, you're certainly making sacrifices. Whether those sacrifices are usability, design, sustainability or what have you. You didn't save money, you bought something that was worth less. Most of my clients are people who previously made a free Wix site, or bought some crappy companies $300 WordPress job. After 6 months or a year, they realize they're missing out and it's costing them money. So they decide to find a company who can create a worthwhile product that suits their needs. And that is where we come in. If this post is to accomplish anything, it should be convincing you to charge what you're worth and never back down. If you love your work, stay up to date in your industry, practice usability and write elegant code. Don't even try to compete with some crappy Fast Food design firm."
    },
    {
      "title": "Google vs. Your Users",
      "url": "/google-vs-your-users",
      "date": "2011-11-04 00:00:00 -0400",
      "categories": [

      ],
      "body": "Undoubtedly two of the hottest topics in the web industry are Search Engine Optimization and User Experience. When done well, it is possible to find a magnificent balance and create a successful website. Unfortunately, this balance is difficult to come by and often leaves sites tipping too far to one side. Before we go any further let's define these terms: Search Engine Optimization ( SEO ): The process of adjusting the content, structure, etc,of a website so that it will be displayed prominently by a search engine.** User Experience ( UX ): A subset of the field of experience design that pertains to the creation of the architecture and interaction models that affect user experience of a device or system. Although these two concepts can work together harmoniously, they are often each other's worst enemies. SEO can be simplified and defined as Designing For Computers. UX on the other hand can be over-simplified and described as Designing For Humans. Let's take a look at an important part of any website, the headlines. Whether your  website is a blog that needs killer headlines to get clicks or a corporate business page -- your headlines need to generate interest. Let's pretend we're sitting in a room with an SEO expert and a UX designer. We tell them we're writing a blog article about WordPress and we need their help picking a killer headline. The thought processes would look something like this. SEO Expert: Let me do keyword analysis and figure out which WordPress related terms are the most viable for Search Engine traffic. We'll put the list together and find a title that will guarantee you a lot of hits on Google. This would probably land us a headline like: Introduction To WordPress. UX Expert: Let me analyze the demographics of your website visitors, after I figure out as much as I can I'll write you something snappy that will guarantee clicks. This would probably land us a headline like: Forget Everything You Thought You Knew About WordPress. Now let's analyze these titles. Now SEO provides great benefit to websites, but there is a drawback. Again, let's over-simplify. Search Engine Optimization is a great tool, it will help you attract new visitors that wouldn't otherwise find your website. By showing up higher in the search engines you can reach a larger audience. The drawback to this is robotic content that won't keep users around for long. While attracting new users is always important, keeping them around and loyal is what leads to real conversions. UX is a fantastic field that can make all the difference in your websites success. A great UX designer can create websites that serve their intended purpose beautifully. Whether your website aims to sell products or services or inform and educate; UX designers act as a blanket between humans and computers. All of this is great, but it doesn't do a bit of good if no one ever finds your website. You can have great content and a wonderful design but one way or another you need to get that initial burst of traffic or it's all moot. Websites have become devalued, the entire industry has. Many people gawk at a $2,000 price tag on a well designed site. If you are serious about the website you are creating, you should at least consider the benefits of hiring a UX consultant and an SEO marketing firm."
    },
    {
      "title": "5 Linux Problems You'll Never Have Using Windows Or A Mac",
      "url": "/5-linux-problems-youll-never-have-using-windows-or-a-mac",
      "date": "2011-11-05 00:00:00 -0400",
      "categories": [

      ],
      "body": "Here's the scenario. You're getting ready to watch a movie. You sit down on your couch and pull your laptop over. You boot it up and pop in the DVD. Nothing happens. It's all too common with Linux Distributions. Bleeding edge distro's like Ubuntu or the super stable packages like Slackware, sometimes for seemingly no reason a USB stick, CD, DVD or other device will just not register. This is the first and foremost reason I cannot take Linux distributions seriously.  This is also the reason I'm writing this post. I've had Ubuntu installed on one of my desktops for 2 years. Today ( 11/5/2011 ) I decided the servers were probably open enough to upgrade my installation to 11.10. I set it all in motion and let it do its thing. When it was done updating, just as usual, it required a reboot so I hit restart. It hasn't booted since. I've tried safe mode, memory testing, dpckg, fdsk and everything else I could think of to figure out what's wrong and nothing works. That is something that would never happen with Windows or Mac. This is also extremely annoying although I know the blame lies with both parties. I hate that I can't watch my Netflix movies on a Linux machine. I hate that I can't access most College websites or use a lot of my favorite online applications. This is just super annoying. When I install some vanilla, ultra-lightweight Linux distribution, not having all the right software is par for the course. However, when I install a 700 MB Ubuntu install, and it can't play movies that makes me furious. This problem is also two fold. I've run into semi-similar issues on Windows and Mac, but those operating systems always point you in the right direction. Most Linux distributions won't even tell you what specifically you're missing. Let alone show you how to get it. Here's the real kicker. Not only will all of the above things go wrong at some point in time, but they will take ages to fix. Most solutions go something like this: Linux is an awesome operating system. I've been a user for years and there are so many things I just love about it. However, there are so many time when one of these problems comes up and I need to take a break from Linux and go back to my Mac or PC. What Operating System do you all use? Tell me one thing you like about it and one thing you hate!"
    },
    {
      "title": "Outbound Marketing Is Dead",
      "url": "/outbound-marketing-is-dead",
      "date": "2011-11-05 00:00:00 -0400",
      "categories": [

      ],
      "body": "Cold calls, email blasts, commercials and radio shout-outs are a thing of the past. When paying for outbound marketing methods  such as these, there are far too many pitfalls that may render your efforts worthless. Examples include: Living in a world completely saturated with advertisements, it's difficult for one particular ad to penetrate and be truly effective. It is for this reason that you should shift your focus towards inbound marketing. Publishing genuinely valuable information on your website will help generate premium, pre-qualified leads and here is how: In this day and age, customers are particularly disinterested in outbound marketing methods such as cold calling because of the internet. They don't want to be bothered with weighing the pros and cons of a decision before that product or service is a necessity. I don't want to think about who is going to do my taxes until the year is up. When a need arises for a particular good or service, customers go to their computers, type in a customized search query and start looking for someone to fill that need. This is where you, and your inbound marketing efforts come in. Say I'm looking for a lawn care service in Michigan. I'm going to sit down at my laptop, head to Google and type a search query like this: Best Lawn Care Service In Michigan. Now, say my top three results look something like this: Can you guess where I'm heading? Why waste my time comparing lawn care companies when someone else has already done it? I'm going to head straight for the blog article and if the blog is well designed and well written, it is going to heavily influence my decision. Write that blog post! Seriously, if you and a competitor each have a website, offer the same service for a similar cost and don't have anything big that separates you from each other. Start Inbound marketing! Create a blog, review your company as well as your competitors. Be honest, charming and provide valuable information. Save potential customers time by warning them of the pitfalls in the industry and how to get the most for their money. When they discover that the amazing resource that taught them so much so quickly also provides the service they're looking for, guess where they are likely going to do."
    },
    {
      "title": "5 Reasons Your Blog Sucks",
      "url": "/5-reasons-your-blog-sucks",
      "date": "2011-11-08 00:00:00 -0500",
      "categories": [

      ],
      "body": "I'm not saying you have to be a professional designer, but take a look around. Be honest with yourself, does your website have the look of a blog ready for success? Just something to remember. If you're an intelligent person, and you try to write really smart blog posts using fancy tech lingo and the like. Chances are most people aren't going to be able to read your blog. Keep your language fun and easy to read in order to reach a larger audience. How many posts have you honestly written? If you've had your blog for less than a year and written less than 100 posts you should write more and worry less. Are you really projecting a voice that people want to hear? You should be up beat, happy, motivating. There's nothing worse than reading a blog article with someone droning on about their problems. If you spend anywhere near as much time worrying about your keyword density or title tag optimization as you do reading and editing your article with your viewers in mind your blog is going to read like robotic nonsense."
    },
    {
      "title": "Commenting: You're Doing It Wrong",
      "url": "/commenting-youre-doing-it-wrong",
      "date": "2011-11-09 00:00:00 -0500",
      "categories": [

      ],
      "body": "Are you looking to boost traffic to your blog by commenting on others? You're probably not doing it right. So, we've often been told that commenting on other blogs can give you two benefits. And this is totally true, but there is a small snag that most people overlook. Most people take this advice and march straight to the most popular blogs on the net. Leaving comments on all of their posts and waiting for traffic to come to you. The issue with this process is that these popular blogs often get hundreds of comments per day, and most of the other people commenting are up to the exact same thing as you are! I mean, if everyone that sees your comment scrolls right by because they're only there to leave their own comment*, no one is clicking to your site! *All three there's used in one sentence! Here is what you need to do from now on. This does two amazing things for you. First, it gets you a much high click per comment rate as most of these people don't have very successful blogs and want to know who it is that left them a comment. On the other hand, it provides a great opportunity for you to meet new bloggers and network. Get your start right now by leaving a comment on my blog! I'll be sure to comment back on yours and you'll be well on your way!"
    },
    {
      "title": "How Good Is Your Website",
      "url": "/how-good-is-your-website",
      "date": "2011-11-10 00:00:00 -0500",
      "categories": [

      ],
      "body": "I mean, really, is your website set up for success? Have you done all that you can to make your website pleasing to both the search engines and your users? Are you really ready to just sit back and wait for the hits to start coming? Ever asked yourself honestly, \"How Good Is My Website?\" Here are a few handy tools to let you know just how good your site is and what  its missing. http://websitegrader.com/ This awesome website gives you a 1 - 100 grade based on a large number of variables. Then it walks you through its logic and shows you the areas you can improve on. This website is by far on of the best tools I've ever found on the internet, and it's totally free! http://www.google.com/analytics/ This is probably the most important tool for a webmaster. Not only is it a great free service that allows you to track tons of information about your visitors but it comes straight from Google and what they say goes. This awesome site allows you to track just about everything about your visitors from their location to their screen size. http://getclicky.com Let me just warn you that Clicky is a serious addiction. Similar to Google Analytics, Clicky tracks everyone who visits your website. Where they come from, how they got there and how long they stayed. However, unlike Google Analytics, Clicky tracks in real time; That means you can watch your traffic update minute to minute! http://www.google.com/webmasters/ Google webmaster is an awesome tool. Instead of tracking your visitors, Webmaster shows you what your website looks like to Google. It will show you how Google percieves your sitemap, links, and most importantly it will show you what searches you show up for and what position you have for that search. http://siteexplorer.search.yahoo.com/ Brought to you by Yahoo, this awesome tool shows you how many other websites are currently linking to your domain. This is a pretty great tool for a lot of reasons, and it's totally free! After reading this post, go check your websites ranking with these tools and see how you're doing. Tell me in the comments, was your rank about what you expected or drastically different?"
    },
    {
      "title": "Stop Making Your Readers Do Shit Work",
      "url": "/stop-making-your-readers-do-shit-work",
      "date": "2011-11-15 00:00:00 -0500",
      "categories": [

      ],
      "body": "I love reading blogs; I love commenting on blogs. That being said, there is nothing I hate more than when a blog makes me feel like I'm working instead of leisurely reading an article. Here are just a few things that make me cringe. I'm trying to be nice and leave you a comment here, why are you making it so hard for me? Here are things you probably shouldn't be doing: Re-Captcha I get the idea here, but weigh the pros and cons for a minute. On the one hand you do prevent a great deal of comment spam. On the other, your making every potential fan and reader of your blog squint their eyes at these stupid looking, hard to read words and fill out a test just to say hi to you. This is one of the most frustrating things I've come across. I go to leave a nice comment on someone's blog and get a generic error message saying my comment has been deleted as spam with no explanation I can't even begin to count how many times I've gone to leave a nice comment on a blog but left the site instead because of Facebook comment plugins. I like being able to leave an anonymous comment, and not let you and everyone else see a link to my personal Facebook page. Despite statistics telling you that you'll get 125% more conversions by signing up for a popup subscription service, they can drive a way a bulk of your visitors. A basic rule that I always follow is to ask myself if any really successful websites are using a particular plugin or method. If you can't think of a single big site using a method, it's probably not worth using. I really considered posting a few screenshots of blogs that make my eyes bleed but I thought it might be insulting. The point here being that plugins like SexyBookmarks, Sharebar and Slideshare are totally great for your visitors but there's a limit. If the point of your blog is having users read your content, why clutter up the content area with a bunch of crap? This goes against the last point, but not really. Not allowing your readers to leave you a comment or share your post is like shooting yourself in the foot. Why on earth would you not want people to tell you how much they like your blog or share it with their friends? Spend the 10 minutes getting your blog ready for comments and social media, it's definitely worth it."
    },
    {
      "title": "That Sidebar Isn't Doing You Any Favors",
      "url": "/that-sidebar-isnt-doing-you-any-favors",
      "date": "2011-11-22 00:00:00 -0500",
      "categories": [

      ],
      "body": "This is a commonly accepted SEO principle. Web designers often put the most important key phrase inside an h1 tag and other crucial information inside h2's. So you can only imagine the strange signals you send to the search engines when you wrap your sidebar's titles with an h2 tag. How many of your sidebar's titles have pertinent information in them, and how many look like mine with sections like 'must read' or 'categories'? Even if you aren't super tech savvy this isn't a tough problem to fix. Let's break it down into three easy steps. There you have it folks! Save your h1's and h2's for something important, but keep your sidebar usable for your visitors."
    },
    {
      "title": "Where Do I Put JavaScript",
      "url": "/where-do-i-put-javascript",
      "date": "2011-11-30 00:00:00 -0500",
      "categories": [

      ],
      "body": "The answer is deceptively simple. Your JavaScript should go exactly where you need it to be! Alright, I know that's probably not exactly what you were looking for but it's extremely helpful. However, if you're looking for a quick answer, 99% of the time it's best to put your JavaScript at the end of your HTML right before the </body> tag. Putting your JavaScript at the bottom ensures that it loads after the HTML is complete. This means that your viewer will see all of the content load on the page before any JavaScript is executed. As JavaScript usually is used to provide interactivity to your users, this method is almost always preferable. Although there is technically nothing wrong with this method, it is important to understand the repercussions of doing so. Let's look at a simple example using a JavaScript alert box. Now, by placing the JavaScript in the <head> section of your HTML is causes the alert box inside to load before any of the content. There may be times where this is preferable, such as making your visitors agree to a form before they are allowed to see your content. The only point to take home here is that JavaScript can be loaded anywhere in your HTML, but the place you put your code determines when the script will run."
    },
    {
      "title": "WordPress 3.3 - Too Many UI Changes?",
      "url": "/wordpress-3-3-too-many-ui-changes",
      "date": "2011-12-19 00:00:00 -0500",
      "categories": [

      ],
      "body": "The most widely used Content Management System -- WordPress -- has come out with yet another great release. With a stunning new interface and some great new features, it's going to get developers like myself feeling like Christmas came early. WordPress 3.3 brings a great many new things to the table. Perhaps two of the most notable are a new admin interface and combining all forms of media into a simple upload button. As a developer, I love how frequently WordPress comes out with great new updates and how frequently their interface changes to accommodate the growing needs of the system. There is,  however, one small detail I feel like WordPress is missing. Developers aren't the only ones using WordPress. Not even close. As much as I love all the new changes constantly coming to WordPress, I hate walking all of my clients through a scary new system and answering questions like: and I can't help but feel as though 3+ User Interface changes in one year is excessive for a piece of software that markets itself to the non technically savvy."
    },
    {
      "title": "Things You Need To Know About Web Hosting",
      "url": "/things-you-need-to-know-about-web-hosting",
      "date": "2011-12-21 00:00:00 -0500",
      "categories": [

      ],
      "body": "I've been a professional web developer for years now, and I've worked with just about every web host on the market. For the most part they're relatively similar, but there are some things you should know before purchasing web hosting. For the sake of this article, we're going to be talking about Shared Hosting plans. I figure that anyone with the need for a VPS or Dedicated Server probably knows the in's and out's of web hosts. When you purchase a web hosting plan, the company you buy from is going to have its own set of rules regarding how many domains you're allowed to host and how much additional domains cost. A bad web host will put a limit on how many domains you can host, or charge monthly for each domain after the first. A good web host will offer you unlimited domains to host at no extra charge. Now, hosting multiple domains might not be that important to you right now. But really think about it. If you're paying ( let's say ) $5.00 per month for your own web hosting plan and you get an idea for a new website. Do you really want to have to sign up for another $5.00 per month just to host your new domain? It's a really liberating feeling knowing that you can always add additional domains to your plan, so make sure you get yourself set up right from the beginning. MySQL Databases are crucial for doing anything cool on the web. Without getting too technical, you can't have a forum, blog, CMS, wiki, etc without creating a MySQL database. While most web hosts offer a small number of databases, this is another area where you would rather be safe than sorry. A good web host will give you unlimited MySQL Databases so you can try out as many fun web applications as your heart desires! Especially if you're new to owning your own website, you're going to run into problems and you're going to need to call customer support. Whether your website goes down, breaks, or isn't allowing you to do something you want to do; Customer support is really important. One thing to watch out for is web hosts that don't offer a phone number. Another handy trick is typing the name of your web host followed by words like sucks, is terrible, is down into Google and seeing what blows back. I'm not working for any hosting companies or collecting affiliate deals but I do have a few recommandations. The three best companies I've worked with are:"
    },
    {
      "title": "Sweet CSS3 Button Tutorial",
      "url": "/sweet-css3-button-tutorial",
      "date": "2011-12-23 00:00:00 -0500",
      "categories": [

      ],
      "body": "I've gotten a few people interested in how I made my push buttons for my blog. Here's a quick tutorial to show you how! I like to give credit where credit is due. I got my inspiration ( and some of the code ) from this awesome collection of CSS3 Buttons."
    },
    {
      "title": "Controlling Your User's Experience",
      "url": "/controlling-your-users-experience",
      "date": "2011-12-26 00:00:00 -0500",
      "categories": [

      ],
      "body": "According to SitePoint, there are Four Elements Of User Experience. While these four elements make up The User Experience, there is an important distinction to be made: Let's review. User Experience is the way a person feels about using a product, system or service. The User's Experience is the actual encounter a visitor has while using your product, system or service. So, for the sake of this article, we're going to be talking about controlling the experience your users have while they are on your website. All too often people just toss their content onto their website and let it land where it falls. Let's take a look at a few things we can do to control the experience of your users. The Must Read section is a great way to control which articles of your blog your users read. One of the many problems that blogs face is that they are constantly being updated with new articles. This can leave some of your greatest articles in the dust. To prevent this from happening, create a Must Read's section and show off your best work. The Featured Post is a classic for blogs. It takes care of much the same problem that Must Reads does, allowing you to keep one of your favorite posts on top. Problogger ( as seen in the above picture ) gets about 10 times as many comments on a featured post than a non-featured. Most blogging platforms, like WordPress, come with a built-in category system but they're usually rubbish. Most people don't want to know how many posts you have in each and every category you've created. The sooner you ditch that type of bloated category system the better. I recommend you replace it with a Supercharged Category System like Pearsonified uses. Instead of a boring and sometimes overwhelming list like WordPress comes with by default, use your sidebar to display categories like \"Improve Your Business\", \"Make Money Online\" and \"Marketing Secrets\". Subtlety is good, but sometimes you just need to make your conversion. Never hide your buy button. Likewise, really think about the ultimate goal of your website and make it painfully easy to achieve. If you want subscribers, customers, followers or likes. Let your users know what you want and make it easy for them to give it to you. The web is a complicated place. And most content driven websites are so full of content it's impossible to find your way. Really think about what you want your user's experience to be and make it happen."
    },
    {
      "title": "2011 Review - A Thank You",
      "url": "/2011-review-a-thank-you",
      "date": "2011-12-27 00:00:00 -0500",
      "categories": [

      ],
      "body": "Once again inspired by CSS-Tricks, I've decided to write a post to thank my readers and remind myself of how far this blog has come over the year. This was an exciting year for this blog, mostly because it started this year! I started writing in April of 2011 and have written 53 posts to date. Having a blog has always been a dream of mine. I love learning and I really love sharing my knowledge with others. I originally started this blog as an SEO tactic to get people to my company website. I was writing posts once a week and just trying to add enough original content to keep Google happy. I still remember the first legitimate comment I got on this blog. It was from a super cool online marketer named Jym Tarrant. Jym had read one of my posts and left me a nice comment afterwards. My perspective on blogging changed drastically that day. Initially I was just writing for search engines because I heard it was a good thing to do. I never really considered my thoughts and opinions reaching a broad audience and the opportunities that come along with blogging. The idea of meeting awesome people in my field, having articles published and educating people on my favorite topics was almost too much for me to handle. I was hooked. Admittedly, I haven't had the success I would have liked to have by this point with my blog. I don't seem to be able to hang on to RSS subscribers and comments are still few and far between but I'm not discouraged. There have been a number of (relatively) small achievements that this blog has recieved that make it more than worthwhile. So far, articles on this blog have been: These have been really incredible accomplishments for me. They have given me the motivation to continue on and I'm really excited about this blog's future. During 2012, some things I would like to accomplish are: Well, those are my goals anyway. Let's see if I stick to them! For those of you that do read my blog regularly, I sincerely thank you! If you are bloggers yourselves, drop me a line so I can check out your work. Happy New Year to you all."
    },
    {
      "title": "How I Use RSS",
      "url": "/how-i-use-rss",
      "date": "2011-12-29 00:00:00 -0500",
      "categories": [

      ],
      "body": "As a blogger or publisher, you most likely are constantly tracking the number of RSS subscribers your blog has. Publishers tend to view RSS subscribers as a status symbol. The number of RSS subscribers you have should dictate how many people read your articles every time you publish a new one. It's common to see popular blogs with large groups of subscribers advertise them prominently. As with Twitter followers and Facebook fans; Once you build up enough of a following, you can leverage your impressive numbers into credibility to gain more and more followers. All too often however, publishers fixate on the number of subscribers without considering the experience that these subscribers or potential subscribers may have. For subscribers, RSS feeds take on a different personality. Most readers don't really care about how many other people have subscribed to your feed, they care about themselves. Now, I don't mean to make readers out to be terrible, selfish individuals. Only to express the fact that most people viewing a blog are sitting at home or work, relatively alone and are looking for some type of value. There are essentially two reasons people subscribe to a blog: Case 1 - You Have Awesome Content And Don't Need To Bribe Your Readers If you have a lot of great content and people genuinely want to stay up to date with what you have to say. You can put your RSS link wherever you want -- People will subscribe. Case 2 - You Gotta Give 'Em Something Just for the record -- Vandelay Design is one of my favorite blogs on the internet. I'm not implying that they need to give bundles away in order to get subscribers. They just happen to be a prime example of providing real value to their subscribers. The  point of this article is that if you really want more RSS subscribers for your blog; You either have to regularly deliver great content and engage your visitors or give away something worthwhile. Some things that tend to draw subscribers:"
    },
    {
      "title": "Strange New Facebook / Google / Bing Comment Spam",
      "url": "/strange-new-facebook-google-bing-comment-spam",
      "date": "2012-01-10 00:00:00 -0500",
      "categories": [

      ],
      "body": "I've noticed a strange surge lately of spam comments that leave a back-link for Google, Bing or Yahoo. Those aren't the typical sites you see in your spam comments folder. In addition to the strangely legitamate websites these spammers are commenting for I've noticed a crazy surge in the number of spam comments this blog gets. Typically it gets around 100 per day and today is well over 400. I suppose I should also point out that the comments left by this particular brand of spammer are kind and full of pleasentries. I've seen my fair share of: comments in the past but these take it to another level. One even went as far as to say: which makes it only a little less satisfying to hit that 'Empty Spam' button and move on. I did a bit of poking around and found this forum thread claiming that these are just test comments that spammers leave to see if your blog auto approves: but I still feel that if this were true so many people wouldn't have just noticed such a sudden rush of them. I'm really not sure either way but it does seem like a strange new trend. Any thoughts?"
    },
    {
      "title": "An Introduction To Using Dropbox",
      "url": "/introduction-using-dropbox",
      "date": "2012-01-14 00:00:00 -0500",
      "categories": [

      ],
      "body": "Dropbox is one of my favorite pieces of software available Today. Simply put, Dropbox is file sharing software that allows you to easily share files with the public, friends and family or yourself on different computers. Step 1 - Go To The Dropbox Website You should see something like this: Step 2 - Download Dropbox Click the download button and it should take you to a screen that looks like this: Follow the normal steps you follow whenever installing software on your computer. I recommend going with the default Dropbox installation. If you already have a dropbox account, you enter your information at the end of the installation. If you need a new account, there is an option for that and you can create a new account without leaving the page. After you've completed the installation and have dropbox synced to your account. You should open Finder ( on a Mac ) or Windows Explorer ( On PC ) and you should see something similar to this: Now you can use your Dropbox folder just like any other folder on your computer. Unlike other folders however, anything you put in Dropbox can both be shared publicly if you'd like or retrieved from any other computer you give permission to."
    },
    {
      "title": "Craigslist Sums Up SOPA",
      "url": "/craigslist-sums-up-sopa",
      "date": "2012-01-15 00:00:00 -0500",
      "categories": [

      ],
      "body": "Yesterday, I noticed that Craigslist has put up a small ad to educate people about the importance of stopping SOPA. While I don't want to get into too much detail, I thought that Craigslist took an interesting approach in explaining what SOPA is by informing you which companies were opponents and which ones were supporters. Google, Yahoo, Wikipedia, craigslist, Facebook, Twitter, LinkedIn, eBay, AOL, Mozilla, Reddit, Tumblr, Etsy, Zynga, EFF, ACLU, Human Rights Watch, Darrell Issa (R-CA), Ron Wyden (D-OR), Nancy Pelosi (D-CA), Ron Paul (R-TX) RIAA, MPAA, News Corporation, VISA, Mastercard, Pfizer, Comcast, Time Warner, ABC, Nike, Walmart, Dow Chemical, Tiffany, Chanel, Rolex, Monster Cable, Teamsters, Lamar Smith (R-TX), John Conyers (D-MI) Really take a look at those lists and then decide where you want to stand on this issue. Do you want to be with Craigslist, Wikipedia or The News Corporations, Credit Card Companies and Walmart? I hope that's an easy decision for you. There are already far too many SOPA educational websites out there and I don't intend on becoming another one. However, if you are looking to educate yourself, here are some great resources: http://defendtheinter.net/ - Beautiful and Informative http://en.wikipedia.org/wiki/Stop_Online_Piracy_Act - Great Wiki Article http://www.forbes.com/sites/insertcoin/2011/12/16/how-sopa-could-ruin-my-life/ - Interesting Story About SOPA's Implications"
    },
    {
      "title": "SOPA Shelved Until Consensus Reached",
      "url": "/sopa-shelved-until-consensus-reached",
      "date": "2012-01-16 00:00:00 -0500",
      "categories": [

      ],
      "body": "I'm  not usually big on using this blog to keep up with the current events or the latest news but I think SOPA merits the attention. According to The Hill So no more need to worry about losing our right to free speech online, or great websites like Youtube and Facebook being reduced to rubble. For now at least, we have our good ole' internet back."
    },
    {
      "title": "Why Do We Want Comments On Our Blog",
      "url": "/why-do-we-want-comments-on-our-blog",
      "date": "2012-01-16 00:00:00 -0500",
      "categories": [

      ],
      "body": "Alright, that might sound a bit silly at first but let's dive in to the question. *Most of which have been made up on the spot for your entertainment When I first started the Insite Design Lab Blog I was obsessed with getting comments on my blog. I began blogging because I was inspired by blogging giants like Chris Coyier and Darren Rowse. These blogging icons often pull more than 100 comments on a good post. Needless to say, when I first installed WordPress and started blogging, I was expecting to get at least a few comments per post. Boy was I wrong. I spent months and months desperately searching for new and creative ways to  get more comments per post on my blog. Even still, I get so much excitement out of each and every legitimate comment left on my blog. ( So leave me some! ) Now, like I said, I genuinely appreciate every comment I get on my blog. However, lately I've begun to question what it is that makes comments so sought after for publishers. Most comments left on most blogs are less than 25 words long and typically are of the following two schools of comments: While it's totally endearing that a real person has read your article and taken time out of their day to leave you a comment, perhaps there are better metrics out there for monitoring your blog's success. For those of you that are publishers yourselves, how do you feel about comments on your blogs? I suppose my question is two-fold. Leave me a comment :) and let me know how you feel!"
    },
    {
      "title": "No Follow or Do Follow - Does It Really Matter",
      "url": "/no-follow-or-do-follow-does-it-really-matter",
      "date": "2012-01-17 00:00:00 -0500",
      "categories": [

      ],
      "body": "Back link building has been at the heart of SEO since the very beginning. It used to be that the more links you had pointing to your website the better you would do on the search engines. Times certainly have changed, but how much? It seems like these days the craze is finding DoFollow blogs to leave your link. For those of you that don't know DoFollow means that search engines will follow the link back to your website or blog. I've been thinking a lot on the matter lately and I'm torn between two schools of thought: While DoFollow links are certainly better for improving your rankings in the search engine. The question becomes what is actually worth more? On one hand, DoFollow links boost your rankings with the Search Engines. On the other hand, leaving your link on high-traffic websites can get you high-quality, targeted visitors from genuine clickthroughs. I spent 30 days spending 1 hour per day leaving DoFollow links on a number of directories and blogs. It's been a few months now and it seems as though the only real results I got were an increased Alexa rank and a slight bump to my position in the SERPS. Then I spent 30 days leaving well thought out comments on high-traffic blogs regardless of whether or not they were NoFollow. I saw a tremendous increase in my traffic and recieved many comments / subscribers from this traffic. Although the test certainly has many flaws, I would say it's better to leave your link on high-traffic websites in the hopes of getting genuine traffic to your website. Although NoFollow links may help boost your rankings, nothing is quite as valuable as targeted visitors."
    },
    {
      "title": "Hubspot Dumps Alexa For Compete",
      "url": "/hubspot-dumps-alexa-for-compete",
      "date": "2012-01-18 00:00:00 -0500",
      "categories": [

      ],
      "body": "There have been a lot of great new things coming from HubSpot these past few months. One of the biggest new changes is that they combine their Blog Grader, Website Grader and Twitter Grader into one all-inclusive and 100% free tool called Marketing Grader. As with all new things, it takes a bit of getting used to but I really think it's an amazing upgrade. Plus, just in case you want the old services, they're keeping them alive for now. **HubSpot's launched a new grader, Marketing Grader!** Try it out and grade your entire marketing funnel. If you don't like shiny new things, go back to Website Grader. One of the biggest changes that seems to have gone un-noticed is that Marketing Grader no longer uses a websites Alexa rank in determining their final grade. It has instead been replaced with a Compete rank. It's no secret that I'm not the biggest fan of Alexa's ranking service, but I'm  not 100% behind the move to compete either. Let's look at some pros and cons. All in all I think the Alexa service needs a lot of work before its rankings should be taken seriously. I'm just going to leave that one con up there. I'd wager about 99% of websites don't even merit a compete rank, making the addition to HubSpot's grader utterly useless. As much as it pains me to say, I think I would have rather HubSpot kept with Alexa's unreliable ranking system. At least with Alexa websites can get some data to work with. Do you use HubSpot's great grading services? What are your thoughts?"
    },
    {
      "title": "Are You Having Problems With Twitter",
      "url": "/problems-with-twitter",
      "date": "2012-01-19 00:00:00 -0500",
      "categories": [

      ],
      "body": "Personally, I love Twitter. I use it everyday to stay connected with friends, blogs and heroes alike. It's really one of the most incredible online services of the 21st century. That being said... I always seem to be having problems with Twitter. I searched around and can't seem to find anyone else writing about this so I figured I would. Have any of you had this happen? You look at a blog post and there is one of those awesome little tweet buttons. In the box it says that this blog post has been tweeted 100 times. You click inside the box to see who has been tweeting about this blog post and you get a Twitter error saying no tweets can be found with links to that blog post. I mean, understandably the numbers can't always line up. There are glitches and expired tweets and any number of variables that can throw the count off. But it really seems to me like the numbers are never close to lining up. Here's another one that gets me. I sometimes spend upwards of 10 minutes trying to find someone on Twitter. Even if I know their username exactly sometimes I just have to do the same search 4 or 5 times before the user will come up. Is everyone else having these problems too? What other problems with Twitter are you having? Share them with me in the comments and I'll add them to the list!"
    },
    {
      "title": "Decision Time - Picking A Web Browser",
      "url": "/decision-time-picking-the-best-web-browser",
      "date": "2012-01-20 00:00:00 -0500",
      "categories": [

      ],
      "body": "I'm starting a new section here on the Insite Design Lab Blog called Decision Time It's going to be a running meme where I write about decisions I'm constantly flip-flopping between. This first segment is going to be: I recently wrote a blog post comparing the different web browsers in a general sense. This post is about which web browser is my personal favorite and why I have such a difficult time deciding on just one. To be totally honest there are only ever two web browsers that contend for the top spot in my book. I constantly go back and forth between the two of them, and I'm never sure which one to consider my absolute favorite. Although they never make it to my top-spot, there are two browsers which deserve honorable mention. Apple Safari - The only reason I'm really giving Safari the honorable mention is because of screenshots. If I'm making a blog post, presentation or tutorial, nothing looks quite as sharp as a screenshot taken on a Mac, using Safari. It's a really sleek looking browsers and despite not being on my favorites list, it's a necessary part of my arsenal. The Opera Browser - RSS Feeds are something I've always struggled with. I read a lot of blogs every day and I'd love to have an easy way to aggregate them all together. Mozilla FireFox: Google Chrome: What are your favorite browsers and why do you think they're better than the rest? How often do you switch between browsers and why?"
    },
    {
      "title": "Another Awesome CSS3 Button",
      "url": "/another-awesome-css3-button",
      "date": "2012-01-21 00:00:00 -0500",
      "categories": [

      ],
      "body": "I was reading an article on http://blog.bufferapp.com/ the other day when I noticed some incredible CSS3 buttons. They're pretty sweet right? Remember, I didn't come up with them, http://blog.bufferapp.com/ did. Enjoy!"
    },
    {
      "title": "How To Improve Alexa Rank | Debunking The Myths",
      "url": "/how-to-improve-alexa-rank-debunking-the-myths",
      "date": "2012-01-23 00:00:00 -0500",
      "categories": [

      ],
      "body": "A few months ago, I wrote an article about how terribly inaccurate the Alexa page ranking service is. Although my opinions on the matter haven't changed. I've seen a recent upswing in articles telling readers what tips and tricks they can use to boost their rankings. When it comes right down to it, there is only one trick that will legitimately work for improving your rank. First, let's debunk the rest of these myths. 1) Use Alexa Redirection Whenever You Can Not only is this myth completely false, but it's also completely dated. Way back in the day Alexa had a system that allowed this url structure: http://redirect.alexa.com/redirect?yourwebsite.com It was believed that if you gave people your Alex re-direct link as opposed to your normal link it would improve your ranking. I don't think this was ever true but it's a moot point now because the entire redirect.alexa.com sub-domain has ceased to be. 2) Install Alexa Traffic Widgets On Your Website Before I tell you all about how this is not going to help your Alexa rank whatsoever, let us take a minute and relish on how absolutely ugly these widgets are. You can find them here: http://www.alexa.com/siteowners/widgets I absolutely, 100% guarantee you that placing one of these big, ugly, slow-to-load widgets on your website displaying your ( most likely ) very poor Alexa ranking will be a determent to your website. Alexa has come right out and announced publicly that their traffic widgets do not increase rank. I say that even if they did, they aren't worth having on your website. 3) Use Some 3rd Party / Non-Related SEO Service To Improve Rank While the simple concept of Better Website = Better Rank holds true in this scenario, don't fall for the bait. With thousands of people desperately looking to improve their Alexa rankings, low-down money-grubbing publishers haven taken the opportunity to try and sell you whatever affiliate software is currently paying them the most money. While investing in a legitimate SEO firm is almost always a good idea for a website, do your research first and don't expect some fly-by-night service to improve your Alexa rank. Before I get into the details of how to legitimately improve your Alexa rank, let's take a second and talk about whether or not it's really worth all the trouble. Some important things to know: In order to understand why the aforementioned tips and tricks are useless it's important to understand the ideology behind the Alexa ranking system. Let's keep it simple with another bulleted list. Those are just the breaks when it comes to the Alexa ranking system, they're important to know. After reading that list above you should have a pretty good idea of what you need to do. These are pretty much the same idea, split into two different approaches. Either convince your current readers to help you by installing that toolbar, or change up your content to attract a different type of visitor. Save your time and money. If you are really concerned with the arbitrary ranking system, adapt."
    },
    {
      "title": "Smashing Magazine Design Goes Responsive",
      "url": "/smashing-magazine-design-goes-responsive",
      "date": "2012-01-24 00:00:00 -0500",
      "categories": [

      ],
      "body": "A while back I wrote a post 'calling out' popular web design blogs for singing the praises of responsive design but not actually implementing it on their sites. Today I noticed that Smashing Magazine has re-designed with one of the most incredible designs I've ever seen. Smashing Magazine is a great resource despite the design. If you aren't familiar with it ( you must be new or living under a rock ) but it's the holy grail of web design sites. They have some of the best articles ever written and they sponsor almost all of my favorite blogs with their Smashing Network. I really recommend going and checking out this design. I can't quite put my finger on it, but I think it's the greatest design I've ever seen. The things I have noticed are: Am I over-reacting here; Or is this one of the greatest designs on the web?"
    },
    {
      "title": "Twitter For Publishers - Insite Design Lab",
      "url": "/twitter-for-publishers-insite-design-lab",
      "date": "2012-01-27 00:00:00 -0500",
      "categories": [

      ],
      "body": "When I first started using Twitter, I had nothing to say. Let me preface my introduction to Twitter.  I've always been a big fan of (the idea behind) RSS. I follow a lot of blogs and I do get tired of browsing to all of them individually. At least a dozen times I've gathered a list of all of my favorite blogs, added them to an RSS reader and then realized that there isn't a single RSS that doesn't annoy the crap out of me to use*. *Let me take that back. The RSS reader built in to the Opera browser is as close to perfect as I can imagine. Unfortunately there are a slew of other reasons I can't use that browser regularly. Then came Twitter. All of my favorite blogs have Twitter accounts, and following them not only keeps me up-to-date on their posts, but I get to see what they're reading and working on. This has become my only real use for Twitter as a reader. I follow all of my favorite publishers so I can stay up to date with all of the great content they put out. In early 2011, I started blogging. Becoming a publisher gave me an entirely different perspective on using Twitter.  Twitter for publishers suddenly becomes all about gaining followers and increasing your CTR ( Click Through Rate ) on links you share. Looking back now, I think I took three wrong approaches when getting started as a publisher: Where I think I went wrong was misrepresenting myself to my Twitter followers. I tried to be someone I wasn't, which gained me a decent number of followers. However, when I would let my real personality shine through; I'd lose those followers and have to start over again. Recently, I wrote a post about being yourself on Twitter and I've tried to stick to it over the last few months. It's been a slow growth, but every week ends with me having more followers than the last. I think some of the best things you can do as a Twitter publisher are: How do you use Twitter? What's worked or backfired for you in the past? Share in the comments and let's get a conversation started!"
    },
    {
      "title": "Amazing List Item Hover Effect",
      "url": "/amazing-list-item-hover-effect",
      "date": "2012-01-30 00:00:00 -0500",
      "categories": [

      ],
      "body": "I've been seeing this awesome hover effect a lot on the web lately and just had to re-create it. The last place I saw it was on movethewebforward.com under Open-Source projects worth your time Hover Over List Items To See The Effect. That CSS came straight from Move The Web Forward. It's one of the best sites on the internet, and you should all go check it out after commenting on my awesome blog post!"
    },
    {
      "title": "Best Linux Distribution - I Love Ubuntu",
      "url": "/best-linux-distribution-i-love-ubuntu",
      "date": "2012-02-08 00:00:00 -0500",
      "categories": [

      ],
      "body": "I Love Ubuntu. This is one of the most over-asked questions on the internet today. It usually merits some type of answer about how Linux distributions are very similar and you should pick the one that's best for you. I think that's crap. If you are on a message board or blog looking to get that question answered, you should go ahead and install Ubuntu. I am a Linux addict. It's my personal opinion that if Linux is meant for you, you'll be an expert in no time no matter which distribution you decide to install first. Ubuntu is the only distribution that's made for complete newbies. I mean people that have never heard of bash, aren't comfortable using a CLI, don't care about package managers or dependency issues. I think we ( 'nix users ) all too often forget what it's like to be an actual first-timer. Ubuntu has a great website, easy GUI installer, tons of support forums and channels and the biggest user base. It comes with a ton of additional software but that will make Windows user's feel right at home. I love Ubuntu and I think it's an ideal distribution for most users. Programmers are elitists, that's just a fact. Here are some common arguments against Ubuntu refuted. Ubuntu Is Slow And Bloated Seriously? Buy a better computer. Ubuntu's Package Manager Automatically Grabs Dependencies Most people don't have time to waste reading every single dependency for Aisleriot Solitaire. Automate it, that's what computers are for. The Community sucks because blah blah The Ubuntu community is huge, not finding help on a particular site / forum / chat-room? Try another one. I'm Too Advanced And Need To Be In More Control Why are you searching for the best distribution? You should know your favorite. And why are you reading my blog? I'm not saying I'd use Ubuntu as my web server OS, but for beginner's / intermediates -- it's top dog."
    },
    {
      "title": "Books vs. Blogs - Becoming a Better Blogger",
      "url": "/books-vs-blogs-becoming-a-better-blogger",
      "date": "2012-03-02 00:00:00 -0500",
      "categories": [

      ],
      "body": "Before you write your next blog post -- ask yourself this question: Chances are someone has. I'm not saying that you shouldn't write the post, just be aware that you aren't a first mover on this topic, and people looking to learn more about your topic should probably check out the other article. Just to make a point, I did this little exercise before writing this post and found that someone in fact had already written this post better than I'm going to. No matter what blogging strategy you follow, it is generally accepted that your blog should be worth reading in some way. So, if someone smarted or with better writing style has already written on your topic, either forget about it or construct a blog post that still has merit in the blogosphere despite your competition. In the article linked to above, Ted Dziuba uses the term Blogarrhea to reference bloggers writing articles on information gained exclusively from other blogs. He then calls for a Read More, Write Less strategy to be incorporated by bloggers, I've taken this to heart. I'm about a month and a half away from my 1 year blogging anniversary and I've learned a lot along the way. When I first starting writing articles, I -- like many others -- was absolutely obsessed with traffic, comments and social shares. I spent countless hours surfing the web looking for tips and tricks to get more people to my website. I tried link building, comment swapping and all the other blogging gimmicks.  However it wasn't until reading Ted's article that I never contemplated why readers would want to read my articles. If you're looking to make your blog more successful, here are a few questions you should contemplate -- they might help you figure out why you're not doing as well as you'd like. Don't be shy, answer these questions honestly. After thinking about those questions and coming up with some surprising answers, I decided to take a small hiatus from blogging. I took a break from both reading and writing articles for about a month, taking time to think about what I really wanted from my own blog. I had just received some amazing books for Christmas and spent my extra timing reading through them. As I read through these great books, it dawned on me how much more information is packed into a published book than an ( average ) blog article. It isn't that I think blog articles can't be incredible learning tools -- obviously they can. It's all about averages, the average web design book is going to have more original thought and useful information than the average post. That's how most of these people get published, they're ( typically ) the best in the industry and have something worth saying. Reading books is better for your inspiration than reading blogs. It's a simple truth that anything you learn through reading blogs has already been written on a blog. However, getting your inspiration from reading other blogs isn't all bad. As important as original thought is, it's also important for intelligent people to weigh in on current issues. If you are a real asset to your industry, you should stay current on the latest news and voice your opinions on anything contentious. I think I'm finding a nice balance with doing about 75% of my reading with books written by authorities in my field and 25% of my reading on popular blogs just to stay up to date. If you're suffering from writers block, my first recommendation is to not write. Wait until you have something that needs to be said, don't blog just for the hell of it. However, I understand that some people don't have that luxury. Maybe you have to write regular posts to keep your fans, boost your SEO ranking or maybe it's your job. If this is the case I've found some pretty cool ways to get inspired without producing Blogarrhea. These ideas apply to web design / programming -- my field -- but I'm sure you can apply the basic idea to your field as well. Happy Blogging!"
    },
    {
      "title": "Linux Showdown: Ubuntu and Mint",
      "url": "/linux-showdown-ubuntu-and-mint",
      "date": "2012-03-31 00:00:00 -0400",
      "categories": [

      ],
      "body": "So, I was clicking around Distrowatch yesterday (March 29, 2012) when I saw something I could not believe. According to their Page Hit Ranking tool, Linux Mint is getting twice the Hits Per Day that Ubuntu receives. This means twice as many people are visiting the Linux Mint website than visit Ubuntu's. Check it out: Now, before I go flying off the handle on a tangential rant, I do understand that twice as many Hits Per Day does not mean the distribution is more popular, just the website. Even still, I could not believe this to be true. I mean, I've run a few Mint box's before and been quite happy. It's nothing against the distribution, I just didn't think any other OS held a candle to Ubuntu's popularity. Since I can't find any data on how many times Mint or Ubuntu have been downloaded, I've devised a few other ways to compare the distributions popularity. Here's what I've come up with: Winner - Ubuntu According to Compete -- which isn't completely accurate -- Ubuntu is getting a good 18,000+ more unique hits per month than Linux Mint. I still find it surprising how close the two websites rank, but this is more along the lines of what I was expecting. Although you can see that Ubuntu is down significantly from last year whereas Linux Mint is on a big rise. Winner - Ubuntu Again, about what I expected. Ubuntu currently stands at just over 1.5 million forum members, with Linux Mint barely over 50 thousand. Winner - Ubuntu Again, it's certainly not proof. However Ubuntu's 1600+ IRC members certainly dwarfs Linux Mint's 175. I know nothing here serves as true proof. But the numbers definitely make me wonder if Linux Mint can possibly be getting twice the amount of traffic that Ubuntu is getting. As I was writing this post I was thinking a lot about if Mint really were passing Ubuntu, what the reason would be. People don't like change. Well, they do -- but people are initially resistant to change. Over the past few years, Ubuntu has really begun to differentiate itself from other Linux distributions. They created their own window manager with the Unity interface and are soon to replace the X window system. Perhaps there has been a growing number of people pushing back to more standard linux distributions like Mint as Ubuntu rolls out change after change."
    },
    {
      "title": "Weird CSS: The Case of the Forgotten Hover",
      "url": "/weird-css-the-case-of-the-forgotten-hover",
      "date": "2012-05-20 00:00:00 -0400",
      "categories": [

      ],
      "body": "I was working on a website today when I noticed something quirky about my links' behavior. First I applied a default color for all links. Then I applied a different color for all links when they are hovered on. Then much later I took a section of links ( one's in the footer ) and gave them a different default color, what i noticed was that when links receive a different color, they all stop having the default hover effect. Maybe some code will make it more clear. Is it just me, or do you also feel like the green link should still hover red, even though it's default color has been changed?"
    },
    {
      "title": "Using PHP Include To Speed Up Your Website",
      "url": "/using-php-include-to-speed-up-your-website",
      "date": "2012-06-08 00:00:00 -0400",
      "categories": [

      ],
      "body": "Recently, I've started moving away from designing websites and begun developing them. Mainly, I've moved away from being focused on graphic design, CSS and JavaScript and started working heavily with PHP and MySQL. Although PHP is a tool mainly associated with back-end development. I recently noticed how helpful it can be for organizing your code. It's pretty simple really. It looks a little somethin' like this: Not sure if any of you will find this useful. But I've been breaking my websites up into separate files lately and it makes things a lot easier."
    },
    {
      "title": "WordPress Auto-Post to Facebook - The Right Way",
      "url": "/wordpress-auto-post-to-facebook-the-right-way",
      "date": "2012-06-09 00:00:00 -0400",
      "categories": [

      ],
      "body": "Looking to have your WordPress blog automatically update your Facebook page? Let's compare options. tl;dr  -   Use http://www.facebook.com/RSS.Graffiti What is it: A WordPress plugin developed to allow all sorts of Facebook / WordPress connectivity. The Good: It gets the job done. The Bad: My Experience: When I was first looking to accomplish this functionality. This was the only option that I saw on the market. I downloaded and installed the plug-in, but I couldn't figure out how to make it work. Finally I found a good tutorial floating around the internet and go moving. The functionality worked just as expected. I was frustrated that I had to create my own Facebook app and a bunch of other stuff but hey, it worked. After I got everything set and working I pretty much forgot about it for a while. Lately I've been trying to figure out how to improve my website's performance and I noticed that the four slowest things loading on my website were all related to this plugin. It was pushing me to an unacceptable about of lag so I had to look for other options. What is it: A Facebook app that takes data from your RSS feed and pushes it to your Facebook wall. RSS feeds are automatically generated by WordPress. They can be found at http://www.yourwebsite.com/feed. This plug-in can post to your personal wall or a fan page. The Good: Super easy and it gets the job done. The Bad: Nothing so far. I mean it doesn't slow down your website because it doesn't go on your website. I'll update if I get frustrated and switch again. I don't know if it's just me but I can not bring myself to use Networked Blogs. Maybe it's just me but I can't get past the sign up screen. Anyone have experience with this method and want to share let me know and I'll add it to the post!"
    },
    {
      "title": "How To Create a Vertical Twitter Button",
      "url": "/how-to-create-a-vertical-twitter-button",
      "date": "2012-06-13 00:00:00 -0400",
      "categories": [

      ],
      "body": "If you head over to Twitter's Developer Page looking to add a Twitter button to your website you'll notice one thing missing. There is no Vertical Twitter Button Here is what I'm talking about folks' Tweet Nothing fancy, no hacks here. This is how it's done. Head over to that same developer page and pick the 'share a link' option. Customize it with whatever information you want. Your website, size, etc. Grab the code, it should look something like this: Take that code and right after the data-url but right before the closing bracket add: You can use this if you like, just swap out insitedesignlab.com with your website. Hope this helps!"
    },
    {
      "title": "Teach Yourself Web Design in 10 Years",
      "url": "/teach-yourself-web-design-in-10-years",
      "date": "2012-06-17 00:00:00 -0400",
      "categories": [

      ],
      "body": "I'm a huge fan of giving credit where credit is due. This post is fully inspired by an amazing post by Peter Norvig that I read at the start of my programming career. It changed the way I thought about development in general and has really been a motivation throughout my career. Norvig's basic argument is that most books and training resources claim to be able to teach you development in 24 hours, 30 days, or 2 weeks. Norvig says: A few days ago, someone emailed me looking to get started with Web Design, particularly WordPress. I decided to go ahead and turn my response into a blog post HTML ( Hyper Text Markup Language ) and CSS (Cascading Style Sheets ) are absolutely the fundamentals of any web design project. Even if you use a Content Management System like WordPress which automatically generates HTML, it's vital to be familiar with both of these languages. HTML is just mark-up and is fairly easy to master. The HTML is the organization of content on a website. Using tags like <body> and <head> you will learn how to properly organize a website and its content. If you don't already know HTML, I recommend starting here: http://www.w3schools.com/html/default.asp CSS is where things start to get fun! Cascading Style Sheets ( the name is a bit deceptive ) is the language of layout and design. You will learn how to change text color, give elements backgrounds and move your website elements into a desired layout. CSS gets really fun as you get advanced and you can start applying awesome effects like animations and transitions. I would recommend starting CSS here: http://www.w3schools.com/css/default.asp Once you have the basics of HTML and CSS down, here are a few websites I recommend checking out for more resources: After you get the basics of web design down, you could probably take what you know and start building WordPress sites fairly easily. However, if you want to get really good at this stuff, the two languages that get you there are JavaScript ( JS ) and PHP. JavaScript: A programming language that allows you to have interactivity with your users. Things like slideshows, animated websites, single page smooth scroll, etc. are all written in JavaScript. Even though there are a number of great free resources out there for learning JavaScript. I really recommend getting a paid account at Lynda.com http://www.lynda.com/Member.aspx . The basic plan costs only $25.00 per month and it is very worth it to have the best in the field walking you through 10+ hour video courses on any language or technology. Lynda also offers courses in WordPress, PHP, CSS, HTML, and pretty much anything else you could think of. PHP: I recommend learning JavaScript first as it is easier and allows for more fun but PHP is really the foundation of any Content Management System like WordPress. With even a basic understanding of PHP, there will be nothing you can't do within WordPress. I also recommend Lynda.com for all of your PHP needs. At this point you should be a force to be reckoned with. I recommend picking your favorite thing and becoming an expert. There is plenty of stuff to learn about each topic and the world can always use more Javascript, CSS or PHP experts. Try experimenting with different CMS' and Frameworks. Build PHP apps with Zend and CodeIgniter  , check out Joomla and Drupal. Also be sure to not become snobby and check out new technologies like Ruby on Rails and Node.js!"
    },
    {
      "title": "Best Table Zebra Striping Technique",
      "url": "/best-table-zebra-striping-technique",
      "date": "2012-07-05 00:00:00 -0400",
      "categories": [

      ],
      "body": "I was working on a project the other day which needed to display a lot of tabulated data formatted nicely. It had been a while since I'd done much work with tables so I began looking online for techniques to design great tables with CSS. Here is what I came up with: Pretty simple idea. CSS offers the nth-child attribute allowing you to apply specific css to items depending on their order within a list. The easiest way to achieve this is to apply a CSS attribute to the 'odd' or 'even' rows. Check it out. This is a technique I had seen done before, but it comes with a pretty major con. All you have to do is create your table, include jQuery and then add this line: This is similar to the last technique. The difference being that instead of using jQuery to color the table rows, you just use jQuery to add a CSS class to them allowing you to take care of everything else with CSS. For this technique, simply call jQuery but this time use a little something like this: and then add a little CSS Have a better technique? Share it in the comments!"
    },
    {
      "title": "Holy Codepen",
      "url": "/holy-codepen",
      "date": "2012-07-05 00:00:00 -0400",
      "categories": [

      ],
      "body": "Have you checked out this sweet new web app? You should! Bam, it feels like JSFiddle with whimsy. The home page displays editors choice projects ( or pens ) in an inviting, easy to use fashion. It's really self explanatory ( clearly made by front-end folks ) so I won't bore you with a full report. However, here are my highlights: That's really all you need to know, go check it out!"
    },
    {
      "title": "How To Install VMware on Linux",
      "url": "/how-to-install-vmware-on-linux",
      "date": "2012-07-12 00:00:00 -0400",
      "categories": [

      ],
      "body": "This requires going to the VMware website, registering and downloading the .bundle file for either the 64bit or 32bit version. If you are forced to download a .txt or a .bin just rename it to a .bundle Here is an example of the command I typed. Yours will differ based on version: *a handy trick with linux is you can type part of the file name and then tap the tab key to have it autocomplete. For example you can type: sudo sh Downloads/VMware tab tab tab and it should auto fill in your .bundle file If you are lucky it'll just work. More than likely it'll throw up an error and tell you to check a log file. Close VMware don't worry about log files. Now, if you are like me you may get this error message: -- Only to be followed if VMware isn't working -- http://communities.vmware.com/servlet/JiveServlet/download/2025997-86343/vmware802fixlinux320.tar.gz I put mine on the desktop for easy access because you are going to delete these two files in a minute. In terminal you can use:"
    },
    {
      "title": "What I've Learned About Android Roms",
      "url": "/what-ive-learned-about-android-roms",
      "date": "2012-07-18 00:00:00 -0400",
      "categories": [

      ],
      "body": "I suppose the first thing I learned about Android Roms was what they were. Months ago when I first began tinkering with Android devices I had no idea what exactly a rom was.  According to DD Systems: So, basically a rom is an operating system. For those of you that are familiar with Linux this should make things click for you, but for others the concept of an operating system may still be a little abstract. Perhaps you've used Windows and Mac before. This should give you an idea of how different operating systems can be. Really an operating system is just a layer of software that sits between your computer hardware and peripherals like your screen, mouse and keyboard. Operating systems can be as different as you can imagine. They can be really lightweight ( think just a terminal on a screen ) or really beautiful. The point, for android roms is that they can be totally different but they are the software that allows you to interact with whatever device you're using. Unlike regular apps, downloading and installing roms requires that you root your phone. Again, for those lucky Linux users out there this concept should be easy to swallow. For those of you ( like 90+% ) that use Apple and Windows computers it may be a little more foreign. The important thing to understand is that Linux systems ( including Android ) are multi-user systems. The 'root' user is the superuser, the one with the power to do anything including deleting system files and editing important files. It's easy to see how giving everybody superuser permissions could be a very bad idea. So for this reason, and to forever keep you from being able to delete that annoying NASCAR app you are locked out of this superuser ( root )role when you buy an Android phone or tablet. When you look to download and install a rom on your device, it requires re-writing a lot of important system files which requires you be the root user ( rooted ) on your device. Becoming the superuser is different for every device so if you'd like to figure out how to root yours, turn to the XDA Developers Forum. Just a note as your interest is peaked about roms and rooting and all that good stuff. Remember that while there is a great community of people helping others experience freedom with their Android devices. You are about to embark on a journey that quickly passes what most warranties cover and many many MANY times lands you with a broken ( but fixable ) device. Just a note =) XDA Developers is the mecca for Android development. It's a magical place full of information, great free software and underpaid, overworked developers who don't mind tearing you a new one if you don't abide by their rules. I say this partially in jest but it's a good thing to know. Most of the rom-makers and xda-developers are young students putting in countless hours of work for far less than minimum wage. Android roms have yet to be commercialized and there just isn't much money to be made in the industry. These developers are really passionate and intelligent but do keep their situation in mind when looking for help on a specific issue. Anyway, Head over to XDA-Developers and check out their forums. Each supported android device has a separate sub-forum and within that sub-forum there will be a link for 'YOUR DEVICE - Android Development'. That's where you'll find all sorts of roms, themes, and instructions for installing them. Keep in mind that understanding the inner-workings of XDA Developers takes a little bit of time. At first it may looks like a hot mess but after using it for about a year I really think it's the best way to keep such a community organized. My recommendation is to spend a good day or two reading through threads in your devices 'android development' forum. You'll start to understand how flashing a rom works and seeing what all is available for your device. Most Android devices are similar as far as how to flash roms and what's available. However some devices ( like my nook tablet ) come with their own special circumstances that make flashing new roms a little different.  You can easily figure out if your device has any quirks by reading through your devices thread on XDA. Once you're comfortable with your device, flashing roms will become second nature. When you flash a new rom, it will most likely delete all of the data on your phone ( not your SD card ). Your SD card will have all of your photos and videos on it but as for your applications, they will be removed. The two applications I use to back up my stuff to my SD card are: SMS Backup & Restore Titanium Backup Now that you're comfortable with your device and using XDA Developers to browse roms. You should have a nice honeymoon period. There was a time where I was flashing about 1 rom per day on average. Just experiment. They're all free and just about as easy to install so go crazy!"
    },
    {
      "title": "PHP Send Data To Included Files",
      "url": "/php-send-data-to-included-files",
      "date": "2012-07-22 00:00:00 -0400",
      "categories": [

      ],
      "body": "I was working on a simple project the other day. I was just going to build a few static pages and do it in straight HTML. Then, as usual I discovered I'm incredible lazy and decided I could do a quick and dirty templating system with PHP. I wanted to make a header.php and a footer.php so I didn't have to re-type the navigation or the footer links. The only issue is the site I was working on needed to have a different banner depending on which page. So I started with a simple include statement like so: Initially, I was going to have a big if elseif statement in my header.php file to figure out which page it is and use the appropriate picture. But then I thought about all the development talks I've been listening to lately and how they always talk about finding elegant solutions to complicated problems. So then I thought that if each page could send it's corresponding banner URL to the header.php file that would solve all of my problems. Doing this is actually much easier than I thought. Remember that PHP generates HTML as it is processed by the server. So if you're calling an include file, it can access any variables you've defined before the actual include line. Check out the solution: And then in your header.php you could use:"
    },
    {
      "title": "Welcome To The Toolbox",
      "url": "/welcome-to-the-toolbox",
      "date": "2012-07-27 00:00:00 -0400",
      "categories": [

      ],
      "body": "Can't find a great web application you've used in the past? Looking for the best in time-saving applications or developers tools? Worry no more, welcome to The Toolbox This website has quickly become one of my favorite go-to places on the web. It offers a sortable list of user submitted web applications that help designers, developers and business people alike. It's a great place to find new great web applications as well as an awesome directory for forgetful people like me to use when I forget the name of one of my favorites! Check it out!"
    },
    {
      "title": "Use Gmail To Send Emails From Multiple Accounts",
      "url": "/use-gmail-to-send-emails-from-multiple-accounts",
      "date": "2012-07-30 00:00:00 -0400",
      "categories": [

      ],
      "body": "Gmail can be easily configured to send emails from multiple accounts. One of the best uses for this is if you have forward only email accounts, say from a website you own and you want to be able to send email from that account to. This requires you already have the other account forwarding to your Gmail account. At the end you'll end up with something like this:"
    },
    {
      "title": "How To Display a Random Post in WordPress",
      "url": "/how-to-display-a-random-post-in-wordpress",
      "date": "2012-08-06 00:00:00 -0400",
      "categories": [

      ],
      "body": "Using SSH or your favorite FTP client, create a new file in your current theme folder. I named mine random.php. Here's what you put inside: Now, Login to your WordPress website and add a new page: I named my page random with the slug random. That way later, we can just link to www.yoursite.com/random and it will display a new post. On the right sidebar of the 'Add Page' page, you should see something like this: The last thing you have to do is add a link to www.yourwebsite.com/random anywhere you want. I stuck mine in the sidebar but it should be all set!"
    },
    {
      "title": "Decision Time - Speed vs. Features",
      "url": "/decision-time-speed-vs-features",
      "date": "2012-08-12 00:00:00 -0400",
      "categories": [

      ],
      "body": "If you had to choose, would you prioritize speed or features on your website? I've been on a strange path recently. I went from spending my time as a front-end designer to a back-end developer and am now coming back full circle. There are a lot of differences between the two paths but one I've been struggling with lately is balancing great visual features with website performance. All things in moderation, there is usually a good balance to be struck but there are times where I find myself conflicted. When it comes to website performance, the thing that has the greatest impact is the number of HTTP requests being sent from your website. Every image, CSS file, JavaScript file, etc is another HTTP request. In short, every image you add or JavaScript plugin you use is another request and contributes to slowing down your website. So let's discuss what can be done to allow a feature full experience without taking a major performance hit. Although JavaScript always takes flack for slowing down websites, images are typically the real culprit. Luckily, there are a few great techniques you can use to greatly improve performance while still using images: Although relatively small in size, JavaScript files and libraries can quickly add up and slow down your website. Again, luckily there are some easy fixes: Ultimately, I think performance wins out as long as you make sure to do what you can to optimize. For all you designers / developers out there, how do you feel about images and JS files? How many do you think is too many? I'd love to hear your thoughts!"
    },
    {
      "title": "Audio's Place on the Web",
      "url": "/audios-place-on-the-web",
      "date": "2012-08-13 00:00:00 -0400",
      "categories": [

      ],
      "body": "I started off this week reading Luke Wroblewski's Mobile First. If you haven't read it already, you really should; It's an incredible read. Anyway, Luke got me thinking about so much. Mobile technology, native apps vs. mobile websites but what I found most interesting was his ideas of designing applications that make use of the new ways people use mobile devices. I'm talking about swiping, tapping, tilting websites. Today, I stumbled across Damien Elsing's Blog and noticed something strange on his sidebar: Check that out, on the right side there is a tooltip asking you to leave an audio message as feedback on his blog. My immediate reaction was that asking for audio feedback is a bad idea. Thinking about recording a message on Damien's blog seemed like an awkward experience. It also filled my with questions: Curiosity got the best of me and I clicked the leave feedback button which answered a few of my questions. It seems like you can record before sending and the technology that Damien is using for audio recording is Adobe's Flash Player. Unfortunately, I'm a bit too security conscious to give Adobe permissions to my mic and webcam so I didn't leave a message. However just because we have barriers today doesn't mean that audio comments are bust. I think that if more blogs and websites started offering blogging comments it could be a really great means for 1 way communication. Text seems to be advantageous in that it can be read by everyone who stops through. Any of you using audio on your websites? Care to share your experience?"
    },
    {
      "title": "Web Design Inspiration",
      "url": "/web-design-inspiration",
      "date": "2012-08-15 00:00:00 -0400",
      "categories": [

      ],
      "body": "Where do you find inspiration? When I first started my career, I derived 100% of my inspiration from other websites. When beginning a design, I'd search around for 5 or 6 websites in a competitive area. I'd find my favorite things about each, and sloppily stick them all together to create something that, although decent looking, was without purpose. My first job within the industry was an internship with a local web firm. I distinctly remember talking to the owner once and being totally shocked when he told me he derived his inspiration from designer products in no way related to the web. I really liked his philosophy but just wasn't a good enough designer to cross mediums in such a way. As my career has progressed, I find myself getting inspired from minutiae of other websites. I recognize this to be a sign that I still have a long way to go in my career as a designer but I think it's a step in the right direction. Often times I'll see a color swatch, a great font combination or a well functioning layout and a full website design will come from it. I think at this point I've simply built enough websites to fill in details after laying some ground work. In the coming years, I'd like to get to the point where my design inspiration comes from others forms of media besides the web. I'd like to create designs inspired from beautiful landscapes, creative packaging and really work on finding a style that is my own. Where do you find your inspiration for the web? Did you follow a path similar to mine or have you had different experiences? I'd love it if you left some of your thoughts in the comments section below!"
    },
    {
      "title": "How To Stick WordPress Comment Labels Inside Input Boxes",
      "url": "/how-to-stick-wordpress-comment-labels-inside-input-boxes",
      "date": "2012-08-16 00:00:00 -0400",
      "categories": [

      ],
      "body": "Sorry for the terrible title, it's a work in progress! Here's what I'm talking about: To achieve this effect, we need to do two things. First, run a check and make sure the current user's name / email / website aren't already in the system. For instance, if you have already left a comment on my blog, it should show your info rather than the defaults. Then, if the user's info isn't already saved display those placeholders so that they can disappear when the user starts typing their info. You'll want to go into your theme file and edit comments.php It should look something like this: This didn't occur to me at first. But since the values are automatically filled in by default, if the user doesn't enter a website, WordPress will end up displaying a link to 'website' which obviously won't go anywhere. For this you'll need to edit wp-comments-post.php - it can be found in the root directory of your website. Find the line ( mine is line 52 ) that starts with $comment_author_url and replace it with this: I'm sure there is a prettier way to do this, if anyone has suggestions I'll happily update the post. Also, I'm attaching my entire comments.php file in case anyone wants to just swap theirs out with mine Download Mine Here Also, it's worth noting that this will hopefully not be a problem soon as HTML5 is implementing the 'placeholder' attribute which will do just what my JavaScript is doing. You will just be able to add an attribute to an input form like so:"
    },
    {
      "title": "Why Building Your Own Blog Software is a Bad Idea",
      "url": "/why-building-your-own-blog-software-is-a-bad-idea",
      "date": "2012-08-25 00:00:00 -0400",
      "categories": [

      ],
      "body": "Four weeks and a thousand lines of code later, I've come to the conclusion that building custom blog software is just a bad idea. I recently started developing web applications for myself using PHP and a variety of great frameworks. This is what lead me to believe creating my own blog was a good idea. I've been using WordPress to blog since forever, and although I think it's the best CMS currently in existence, there were just a few things I always wanted done differently and I thought I was up to the challenge. Lately I've become intrigued, maybe obsessed, with website performance. I really wanted to build a blog that was lighting fast. This meant a few goals for my project: After a lot of consideration, I picked Codeigniter as my framework for the project and got to work. I build the basics in a night and was feeling pretty good about everything. I had a great login system, the ability to create and edit posts and it was lighting fast! It was at this point that I discovered a new appreciation for WordPress. I ran into a few problems I just couldn't solve: At least for now, I'm back to WordPress with a new found appreciation. Any of you ever tried building your own CMS? Care to share your thoughts?"
    },
    {
      "title": "Why You Should Use Xmonad",
      "url": "/why-you-should-use-xmonad",
      "date": "2012-08-29 00:00:00 -0400",
      "categories": [

      ],
      "body": "Xmonad is my absolute favorite window manager. That's my awesome desktop running chrome, glxgears, vim, terminator, irssi and hotot for Twitter. In case you cared. Xmonad is a tiling window manager written in Haskell. Let's over simplify things for a minute. Tiling: Tiling, in this case is the opposite of floating. Think about a Mac running OSX or a Windows 7 computer. As you open up windows and applications they appear on your screen floating on top of each other. If you move one on top of another, it floats there mimicking a stack of papers on a desk. Tiling window managers, by comparison snap windows into place in a two dimensional grid, nothing floats on top of anything else. This is awesome because you can stop using your mouse and fiddling to get things placed right. With Xmonad, you set up the way you want windows to layout and then as you open them they just go to the right place. Minimal: By default, Xmonad doesn't come with a background image, a clock or anything to see / click on. In fact, the first few times I started my Ubuntu desktop with Xmonad I thought it was stuck at a loading screen. As you can see, I've since installed Xmobar to add a nice status bar at the top of my screen. Fast: Xmonad is fast both in performance and in its ease of use. It's a bit weird to get used to using just your keyboard for window control but trust me, after a month or so you'll be flying faster than you ever thought possible. To install Xmonad on Ubuntu or any OS with apt-get, just open up a terminal and type: I also suggest installing Xmobar and dmenu ( for launching applications ) That will get you all you need. Then you can just log out and select Xmonad as your default window manager. Last but not least, if you want to add some cool features to Xmobar or change the way Xmonad behaves you'll want to edit two files: and My Xmonad Files!"
    },
    {
      "title": "Questions I Had As A Newbie Programmer",
      "url": "/questions-i-had-as-a-newbie-programmer",
      "date": "2012-08-31 00:00:00 -0400",
      "categories": [

      ],
      "body": "I was having a talk the other day about the most frustrating moments I had as a beginning programmer. Then I thought it might be helpful to answer those questions in case any of you are in the same spot now! Even as I write the title I realize I'm years away from being qualified to answer that question. But here we go anyway. ****Chances are no matter which language you pick to start off with it's going to be a procedural language. Honestly, I don't think you even have to concern yourself with functional programming languages for some time, so let's just skip them :) Procedural languages are similar in a great many ways. Most languages you would pick to begin with will have a relatively similar syntax. They each have their own uses but learning one will make it extremely easy to learn more and more. Let's take a look at some languages that are easy to transition between. Now, these languages are far from identical. They each have uses, for example Java is the language you need if you want to make native Android applications. JavaScript is the language you'll want if you want to have interactions within a web browser. The biggest thing to understand is that most of the languages you'll be working with will use a syntax similar to the C programming language. So as soon as you learn how to write programs in one, writing basic programs in others will be fairly simple. Another thing I struggled with as a true beginner was how to just get up and running with the basic web languages. I heard that you could do all sorts of cool things with jQuery but I couldn't figure out how to get it working on a page. I'm sure there are more thorough tutorials elsewhere but here's a quick guide. I'll group these two together as they are fairly similar. The first thing you need, which is actually quite complicated, is your web server to be running the server client of either Ruby or PHP. Although there are many arguments about which language to use for which task, one significant advantage that PHP has over Ruby on Rails is that just about every server from $3 per month shared to $1,000 per month dedicated will come set up for PHP. To test if you have PHP running on your server, just create a file called info.php and copy / paste this inside: To get started with jQuery, head over to their website and click the download button which will take you to a blank page containing a bunch of code. Copy that code and paste it in a blank document, call it something like jquery.js and save it. Then, create a new folder and put that jquery.js inside. Create a new file, called index.html and put it in the same folder. Inside this file, paste this: ...and that's it! With jQuery, all you have to do is incude a script tag linking to it in your html page and then write any jQuery you want after that call. What are questions you had as a beginning programmer? Are you a beginning programmer now? Ask some questions!"
    },
    {
      "title": "140 Characters",
      "url": "/140-characters",
      "date": "2012-09-04 00:00:00 -0400",
      "categories": [

      ],
      "body": "Every once and a while, I stumble on a topic of particular interest to me. The past week I've been reading a lot about distractions, particularly those coming from computers and smart phones and their effect on our ability to pay attention. While listening to a great shoptalkshow episode last week I stumbled upon a series of great articles and presentations on what I think is best summed up by Matt Mullenweg as our 'Culture of Distraction'. Matt and Joe both speak to the rise of portable technology and social networking and their effect on our ability to pay attention. As Joe describes it, 'Attention is a muscle', and we as Americans are losing our ability to use that muscle. They talk about the advent of web-browsing smart phones causing a paradigm shift in how frequently we are online. With smart phones and increasingly portable computers we find ourselves browsing the web much more frequently than we did before. Being able to quickly get online at any time throughout the day has lead to a decrease in the amount of time we spend online per visit. This paradigm shift, in tandem with the rise of social networking has led to literally thousands of wonderful distractions that leaves some suffering from information overload. It interests me that all of the ease and convenience given to us by smart phones, the internet, social networking and more are actually making it more difficult to get things done. I'm just as guilty as anyone of living in a culture of distraction. Just as I'm writing this post I notice that I'm sitting here with multiple monitors, listening to music with my twitter window and an IRC terminal open next to me. Before reading all of this, I was quite sure that having such easy access to all of these blog posts, messages from friends and streaming media was actually helping my productivity as I master the art of multi-tasking but I'm beginning to question myself. Check these articles out for a lot more on the subject:"
    },
    {
      "title": "Still So Much To Learn",
      "url": "/still-so-much-to-learn",
      "date": "2012-09-07 00:00:00 -0400",
      "categories": [

      ],
      "body": "Up late, browsing Hacker News it dawns on me how much I have left to learn. About the web, development and design. It's been almost two years since I landed my first web design internship. Knowing next-to-nothing about programming, the web or design - I was brought on board by a web company in my area where I got a good education in the fundamentals of Web Development and Search Engine Optimization. After leaving the internship I started up my own company doing freelance web design for clients on a budget. Right away I was having a blast and feeling on top of the world. I knew very little about the web but I was always able to hack projects together and figure out a good **enough solution. I was mostly installing pre-made themes with minor tweaks or creating website from Photoshop documents. After surviving this way for a while, I began to understand the technologies I was using and became fascinated with learning as much as possible about them. I purchased a Lynda.com account and started watching hours and hours of training videos every day. I ran into that old adage \"The more you learn, the less you know\". As I began learning more about web servers, scripting languages, and web frameworks I couldn't believe how much there was out there. There is a serious difference between learning how to create WordPress themes and becoming a serious web developer. I was a little over a year in the industry when I landed a paid internship at another great web design company helping out with SEO and design. They had a serious client base and I got to work on a large variety of projects. They introduced me to version control, as well as a more advanced view on design and development. Leaving this internship I has a much clearer sense of what I wanted to accomplish. I wanted to be one of those developers with an incredible skill set and diverse portfolio. Since leaving I've begun taking my education a lot more seriously. I re-enrolled in college and began taking a heavy load of computer science classes. I've expanded my blogroll to include dozens and dozens of design and development blogs. I've started reading aggregator websites like Hacker News daily and even become the co-organizer of a local programming meetup group in my hometown. As I continue learning, the list of items on my \"to learn\" list continues to grow. There are so many technologies I have a rudimentary knowledge of that I seek mastery for. I think the important thing to remember is that the journey is the destination. I need to keep it in my head that my to learn list will never reach zero, and that's part of what drew me to web development in the first place. New technologies are advancing at a pace that makes it extremely difficult to keep up, but the infrastructure of the industry is still built on concepts that have been around since the late 1970's. So here's to never stopping learning, and always being aware of what we don't know."
    },
    {
      "title": "My New Best Friend, Typekit",
      "url": "/my-new-best-friend-typekit",
      "date": "2012-09-08 00:00:00 -0400",
      "categories": [

      ],
      "body": "10 minutes to make your website twice as fast and ten times as sexy? You think it's too good to be true, enter Typekit: Typekit is, in my opinion, the best way to get awesome fonts onto your website or blog. Until today I've been using Google Fonts for all my sweet web fonts. Google Fonts are free and give you some pretty awesome fonts but getting Google fonts on your website makes your site slow. I was really suffering from a high bounce rate and my load time was hovering around 2 seconds. After a variety of tests, I figured out that Google fonts were the main culprit for my slow load times so I began to look for alternatives. I found Typekit, and because of their unbelievable prices ( starting at $25 per year ) I bought a license. I found some really incredible fonts and switched them out with my Google fonts. Honestly, and I know this sounds ridiculous but my page load went from 2 seconds to around 800 milliseconds. Now, I'm not saying everyone will get the same speed boost that I got. I know I was pushing my limits with Google fonts. I had two different fonts each with two different versions which Google recommended against. However, I really do believe $25 per year is absolutely worth the incredible selection and vast speed improvements. One of the most interesting differences in switching to Typekit is the way you grab the fonts you want to change. With Google fonts, you pick the fonts you want to use, and the website gives you a link to an external stylesheet you put in the head of your website. Then,  just like regular fonts, you can use CSS to grab any element and give it a font-family of whatever font you picked. With Typekit, and I'm not entirely sure why, you enter your web adress into their system. Then they give you two lines of JavaScript which you also stick in the head of your website. After that, you use the Typekit interface to grab onto HTML elements and within minutes it updates your website for you. Needless to say I'm a huge fan of Typekit and will be using it for all of my websites from now on. I really recommend you go check it out. With its reasonable price, amazing collection and blazing fast distribution you can't lose!"
    },
    {
      "title": "A jQuery Preprocessor",
      "url": "/a-jquery-preprocessor",
      "date": "2012-09-10 00:00:00 -0400",
      "categories": [

      ],
      "body": "I've been doing a lot of CSS preprocessing lately with Compass-Sass. In case you're not familiar, Compass is a CSS Authoring Framework. It allows you to use either SCSS or SASS for CSS preprocessing. The basic idea is you can write CSS in a beautiful, easy, magical way ( the way CSS ought to be ) and it will compile at save time turning it into the plain and vendor prefixed reality we all know. But enough about that for now. I was at a LAMP meeting earlier today and some of us started talking about CSS preprocessing and then we were discussing jQuery libraries. Disclaimer: I know many people are sick of hearing others complain about jQuery as though it taxes website performance. Trust me, I'm one of those people. I know that it's only like 32kb minified and served from the most popular CDN in the world. I know it's really not a big deal in any way but bear with me on this! I had this kind of cool idea for a jQuery preprocessor. The idea is simple, but I have no clue on how to execute it. You would locally write the jQuery code you want for your web project, and then the preprocessor would turn your jQuery code into straight JavaScript. This would land you with a much smaller file at the end of the process and that may or may not be better than taking the full jQuery from Google CDN. Thoughts?"
    },
    {
      "title": "Let's Speed Up That Website",
      "url": "/lets-speed-up-that-website",
      "date": "2012-09-11 00:00:00 -0400",
      "categories": [

      ],
      "body": "I've been on a crusade lately to get my website running at top speed. Before we get to speeding things up, let's find out what's slowing you down. Lately I've been using GTmetrix for analysis as it combines many of the other popular services. After analyzing your website, you can really just follow the report and make the important changes but let's cover a few of the big ones first: Did you know you're allowed to zip all of the data on your website and send the zipped data to your users browser? This way they can have their browsers unzip it and things go way faster! The web gangsters at HTML5Boilerplate came up with some really cool stuff in the boilerplate's .htaccess file. Perhaps the best gem is allowing your server to Gzip everything. Just stick this in your .htaccess of your website's root directory. I've written about this before, every image, CSS file and JavaScript file is another request that the server has to send to your computer. Check out This Free Tool to see how many HTTP requests your website is sending and think about things like Combining images into one sprite and JS and CSS into one file each to makes things go a bit quicker. Although you should always be doing your best to compress your images before uploading them, using tools like Codekit or Timage can save a bunch on image size. Hopefully, you are either familiar with .htaccess files or using a sweet CMS like WordPress so caching will be easy. In its simplest form, caching is turning your complex PHP pages assembled with sometimes hundreds of specific queries into a static HTML file so it will load faster. If you are using WordPress, go ahead and install W3 Total Cache and be amazed at how much faster your website will load. What are you doing to speed up your website? Share in the comments and I'll add your ideas to the post!"
    },
    {
      "title": "Codekit - The Mac App for Web Developers",
      "url": "/codekit-the-mac-app-for-web-developers",
      "date": "2012-09-12 00:00:00 -0400",
      "categories": [

      ],
      "body": "For one reason or another, and despite being a software developer, I rarely spend money on software. After numerous CSS-Tricks Screencasts, I finally decided to purchase a license of CodeKit. This app has so many features, they include... I feel like a way better developer using it. Since I purchased a license I downloaded all of my images and ran them through Codekit's one-click optimization. I losslessly reduced my total image size by 18%! Since then I've felt free to really start experimenting with SASS and JADE and easily compressing all my code. It retails for only $25! Plus it's on a sliding scale so you can pay anywhere from $20-$28. If I had one recommendation for the whole app it would be to increase the scale, $20-$100 seems like a better option. So go grab it already!"
    },
    {
      "title": "You're Killing This Industry",
      "url": "/youre-killing-this-industry",
      "date": "2012-09-13 00:00:00 -0400",
      "categories": [

      ],
      "body": "I love computer science. I literally spend the majority of my waking hours developing software, reading about software development and learning how to get better at developing software. Knowing how to develop software is the modern day equivalent of being a real-estate agent, construction worker, electrician, plumber, salesman and CEO. What other skill set allows you to start to finish craft any business of your dreams? The days of brick and mortar are long gone, websites and mobile applications are the future and there seems to be no end to the money one can make with a little business sense and a strong development toolkit. Re-enrolling in college has been nothing short of an interesting experience. I've found a lot of my notions about what college is like held true and a surprising few have been completely shattered. Let's just skip ahead to the real point of this article. Most of my classes are in the Computer Science department. Class after class is taught by older men with Phd's who seem to have lost all passion for the material they teach. They manage to make programming seem so boring people are literally walking out of my classes. While we waste semester after semester building linked lists and terminal executing Java programs -- real people are having a blast out their creating e-commerce stores, social networks and Software as a Service. Now I know, College's can't be expected to change entire curriculums just because some hot new technology is being used on the web. I suppose my only point in all this is that it must take extreme apathy to make an industry like ours seem boring."
    },
    {
      "title": "Nobody EVER Wants Firefox's Inspect Element",
      "url": "/nobody-ever-wants-firefoxs-inspect-element",
      "date": "2012-09-14 00:00:00 -0400",
      "categories": [

      ],
      "body": "I mean it. Nobody, ever, wants to use Firefox's inspect element instead of firebug. Let me be clear: When Mozilla first announced the launch of their very own element inspector I thought they had just purchased Firebug and incorporated all of Firebug's awesomeness into the browser. Boy was I wrong. Additionally, when I first saw all the cool 3D rendering you could do of websites using Firefox's cool new element inspector I thought that it was definitely the tool for me. Wrong again. Take the iphone 5 for example. The new case, retina display and powerful a6 chip make it among the best phones in the world. But when I need my shirt washed or my jeans dried, it's just not the device for me. Firefox's inspect element looks great, but it is in no way suitable for the common tasks that Firebug helps developers with everyday. I wouldn't be so bothered by their new element inspector if it didn't completely replace Firebug's 'Inspect Element' tab when you right click. Firebug has been demoted below and now reads 'Inspect Element Using Firebug' which although clear, does me little good when I mistakenly click the inspect element tab above. 3D website are cool, but I have work to do. I think Firebug should be returned to its former spot and Firefox's tool should go below it with a title like 'Make this website 3D and poke around' deal?"
    },
    {
      "title": "DreamHost Review",
      "url": "/dreamhost-review",
      "date": "2012-09-19 00:00:00 -0400",
      "categories": [

      ],
      "body": "I work with a lot of web hosts. Constantly pushing and editing clients websites has given me experience with dozens of web hosts. With all this experience, I've comfortably settled on DreamHost being my most recommended hosting provider. DreamHost's shared hosting plan starts at $8.99, a bit more expensive than some of their competitors. It quickly becomes obvious, however what that extra cost gets you. With a feature-rich control panel and great customer service the extra cost is a no brainer. But I'm getting ahead of myself. As I mentioned earlier, I've had a lot of experience with web hosts. I've also had a lot of experience with their control panels. Control panels are more or less the same across hosts. They allow you to register new domains, create databases and email accounts and so much more. I have to say that Dreamhost and Media Temple have the best control panels I've ever seen. The User Experience is great, everything is where you expect it to be and there is no limit to what you can do with it. To date, I've never once had to contact Dreamhost about their control panel because everything I've needed to do has been easy to figure out. As I mentioned in my iPage review, speed was the main reason I left. Dreamhost has been pretty good as far as speed goes. I know that Media Temple offers faster hosting but you definitely pay extra for it. For Dreamhost's starting $8.99 per month they can't be beat on speed. Every once in a while, I do need to contact Dreamhost's customer support regarding an issue. I often am working on projects that push the boundaries of shared hosting plans so support tickets are just a fact of life. While their response speed has been somewhat lacking ( they typically reply within 48 hours ) the responses are fantastic. Dreamhost's support ticket system allows you to choose your level of knowledge regarding the issue so I'm never being talked down to or left confused. They always dig deep to find the root of your issue and offer helpful suggestions . Absolutely. I frequently have new clients sign up with their services. I think they provide a great value and offer custom plans that can scale with your website. Go check them out!"
    },
    {
      "title": "JavaScript Is Everywhere",
      "url": "/javascript-is-everywhere",
      "date": "2012-09-30 00:00:00 -0400",
      "categories": [

      ],
      "body": "Today, I began what I hope will be a long lasting relationship with Node.js. A few weeks ago, I was listening to a podcast featuring Matt Mullenweg - founder of WordPress. The topic of most interesting programming languages came up and Matt started talking about JavaScript. After listening to the podcast I looked into what cool and interesting things were being done with JavaScript and boy did I find a lot. Chances are if you're familiar with JavaScript, you know it in the browser. With the help of libraries like jQuery and MooTools JavaScript is the language of interaction on the web. With it you can make animations, video games and even shopping carts . This alone makes JavaScript a pretty fantastic language but I was really surprised to find its less common uses. Until now(ish), JavaScript has been thought of as an exclusively front-end, browser-based technology. With the introduction of node.js you can run JavaScript as your server side language. This offers a whole lot of functionality I'm not nearly adept enough to understand. I've spent the better part of a day playing around with node.js and it's really changing the way I think about development. Here are  a few quick notes - I hope to post a lot more about it later. This was the final kicker for me. People are using JavaScript to control robotics like Arduino boards. I've seen some pretty cool stuff like one guy built a tweet notifier and others are making programmable arms. I think the moral to the story is that JavaScript has a good chance of being the language of the future. It's widely supported, well documented and can be used for just about anything. I feel comfortable saying that at the very least, If you could only learn one language and wanted to pick the one that would give you the most bang for your buck - I would recommend JavaScript."
    },
    {
      "title": "Timely is Going Paid - I'm Going to Buffer",
      "url": "/timely-is-going-paid-im-going-to-buffer",
      "date": "2012-10-03 00:00:00 -0400",
      "categories": [

      ],
      "body": "Timely, at its simplest form, is a tweet scheduler. Instead of posting your tweets directly to Twitter, you can (after signing up) start scheduling them on Timely. After you've posted a few tweet via Timely's interface, their software will start analyzing the impact of each tweet in hopes of finding the most ideal times during the day to reach your followers. Timely, and services like it are really great for a few reasons. I've been a big fan of Timely for the past year. The service seems to go down pretty often, but being a free service I've had no real complaints. When I first got the email about their service going premium, I was hoping for one of three things. Unfortunately, none of these things happened. Honestly, I don't make any money with my Twitter account. I understand that many people using such software probably make money from tweeting, at least indirectly. I don't make any money from my blog, and I only use Twitter to promote my blog - so I don't really have much to gain. I do, however, pay for some services for my blog. I use Typekit for sweet fonts, and I happily pay the $25 per year for their great service. Like Typekit, I'd happily pay approximately $25 per year to have my tweets nicely scheduled. So, how much is Timely going to charge? $10 per month Seriously, $10 each month just to add some functionality to a great free service (Twitter)? I just can't justify that cost. Are they going to release any new, great features? It doesn't seem like it. What about some benefit for using their service for two years? Nada. After a quick Google search, I stumbled upon Buffer. Buffer is freakin' awesome! It does the same things Timely does - but Buffer supports Facebook, LinkedIn and app.net as well. It also comes with a better Dashboard, full analytics, browser plugins and more! After playing around with the Dashboard a bit I was sold. I decided to get the Chrome plugin and check it out. Like Timely, it offers a quick button for posting the story you're reading to Twitter. Unlike Timely, it has all sorts of awesome suprises. I love Hacker News - Check out this little gem! I keep finding great little things like this. I really think Buffer offers a superior service. And it's free!"
    },
    {
      "title": "Things I'm Excited About",
      "url": "/things-im-excited-about",
      "date": "2012-10-10 00:00:00 -0400",
      "categories": [

      ],
      "body": "I wasn't quite sure if this merited a full blog post but I think it does. Here is a list of things that have me excited, particularly pertaining to web design. When FireFox released their own Inspect Element I was pretty disappointed. It was a cool idea but it's nowhere near as useful as Firebug. Today, I updated FireFox and saw their brand new developer toolbar. I think they really nailed it with this one. It's elegant, useful, fun and stays out of your way. If you're a developer, go grab a FireFox update and check it out! This is a project that I honestly passed right over without a second thought. A few weeks later, I came back to their website and can't believe I didn't see the potential in the software. The team here is providing a fun and elegant solution for programming the web, in the web. Browser based editors make a ton of sense and this one looks really promising. Application Programming Interfaces or APIs are interfaces between two pieces of software. Really what this means is that they are fun tools that allow you to get cool information from popular web services. For example, you can easily create a web page that lists all tweets that mention you, displays your last 10 Flickr images, shows your GitHub followers, etc. There are so many possibilities using APIs that there are entire companies that offer services just off of other services APIs"
    },
    {
      "title": "On CSS Frameworks",
      "url": "/on-css-frameworks",
      "date": "2012-11-14 00:00:00 -0500",
      "categories": [

      ],
      "body": "Recently, CSS Frameworks have started to dominate the web. They are particularly useful, especially for start-ups that need a site built fast. A CSS Framework is a stylesheet you can use to rapidly prototype your website. Essentially, they give you a bunch of classes and ID's you can use that make your website look sweet. The two most popular CSS Frameworks on the market right now are Twitter Bootstrap and Foundation. tl;dr I like Foundation better. The folks over at Design Shack did a pretty nice comparison that I agree with. They are both nice looking, responsive and come with all the styles you should need for your project. I happen to like the buttons and typography that Foundation provides a bit better and I'm getting a little tired of seeing Bootstrap everywhere. Normally I try hard not to hate things just because they are popular, but seeing the same buttons / forms / typography on dozens of websites each day gets me a little tired of them. A while ago, I (think) I heard Chris Coyier talking about the potentials pros of having Twitter Bootstrap all over the place. He mentioned the usability gains for users that see the same CSS elements all over the place. I see some merit to that. I think users might enjoy seeing similar buttons and forms on many of the services they use. So, what do you all think? Are they good? bad? Which one is your favorite? Share in the comments!"
    },
    {
      "title": "Mashable Gets A Great New Look",
      "url": "/mashable-gets-a-great-new-look",
      "date": "2012-11-19 00:00:00 -0500",
      "categories": [

      ],
      "body": "If you haven't seen it already, head over to Mashable's Beta site and check it out! Try as I might, I'm always against big design changes initially. Over the years I've learned to keep my feelings to myself for at least two weeks. Typically after a few days I find myself really enjoying a new design but initially I almost always find them off putting. This time was different. I really like this design. It really makes the most of my screen real estate and yet I have an easy time reading through the content. One thing I really enjoy in a news site design is when they just get out of your way and give you the news. The logo is minimal, a nice fixed bar at the top has all the navigation you need; Other than that, you can just get down to business reading articles. Go check it out and let me know what you think!"
    },
    {
      "title": "Passing Parameters in Javascript onClick Event",
      "url": "/passing-parameters-in-javascript-onclick-event",
      "date": "2012-12-13 00:00:00 -0500",
      "categories": [

      ],
      "body": "I ran into a problem today. I was trying to generate a bunch of input buttons with JavaScript and have each of them do something unique onClick. The issue is in JavaScript global variable. Since temp is a global variable, the onclick trigger sends the content of temp after the loop is all finished. Since Adam is the last value to be stored in temp, that's what all buttons alert. The trick is to use input name as a non-global and then pass the whole input tag to the function like so:"
    },
    {
      "title": "Getting Started With Jekyll",
      "url": "/getting-started-with-jekyll",
      "date": "2013-01-01 00:00:00 -0500",
      "categories": [

      ],
      "body": "I've been really interested in checking out Jekyll for a while now. According to their website: Jekyll is a simple, blog aware, static site generator. Yeah. That didn't clear things up for me either. Basically, Jekyll is a great little ruby program that allows you to make a blog with all the bells and whistles you're used to, and then export the entire thing into fast, secure, cachable HTML files. I found the actual Jekyll install a bit confusing. So I started with this Jekyll Base project that Daniel McGraw has been working on. You should see something like this after you download it: And that's it. Download that project from github and stash it in a folder. Next we need to install Jekyll. Fire up that terminal ( I know it can be scary but this is pretty painless! ) Assuming you already have ruby installed that should take care of that. Otherwise you might have to install ruby manually but that's not for this tutorial. Next step, and this is totally optional is to install RDiscount so we can use Markdown to make blog posts. We're good to go! Let's move to that folder where you put Daniel's Jekyll Base. Pop open your terminal and change directory to that folder. Then type: In order for Jekyll to update files as you edit, the terminal running jekyll --server either needs to be left on or turned on after each change and before you expect to see anything in the browser. Then open up your favorite browser and navigation to: http://localhost:4000 and there you have it! If you look back in your file directory, you'll see that Jekyll added some more files and folders. For more information on what those are and why they're important, check out Daniel's post on his personal blog. We're just going to jump right in! Open up your favorite text editor and use it to open _posts/1985-10-26-Test-Post.md. You should see something like this: Like the post says, if you want more information on Markdown, check out Daring Fireball Go ahead and get your hands dirty! Use that Daring Fireball post to figure out the syntax of Markdown. Feel free to just use regular HTML if you prefer although I think you'll find Markdown very elegant. If you want to change the 'date' of the post, just change the date in the filename. When you're ready to see your post, just head over to the browser and refresh. I'm going to do a whole series on Jekyll deployment. For now, just know that you can take the entire contents of _site and stick them on the web via FTP. They should be all good to go. Also, if you're moving from a more robust platform like WordPress here are some things you'll need to figure out that Jekyll doesn't offer out of the box. Let me know in the comments if any of this was unclear or just isn't working. I'm planning on doing a lot more posts on Jekyll so check back soon!"
    },
    {
      "title": "Wrapping Up 2012",
      "url": "/Wrapping-Up-2012",
      "date": "2013-01-02 00:00:00 -0500",
      "categories": [

      ],
      "body": "It's been a crazy year. I know January is a bit late for an end of the year wrap-up but the end of the year came and went so quickly. Last year, I wrote an article wrapping up the first year of this blog and highlighting some goals for 2012. Looking back on my goals I'm surprised both at how few I achieved as well as how much my priorities have shifted. My goals for this past year were to: Publish an Ebook - This has fallen completely off my radar. I like the idea of publishing work longer than a blog post but I'm not so interested in SEO and Internet Marketing right now. Guest Posts - This still interests me, but I wrote a whopping 0 guest posts last year. Make Friends - This has proven quite successful! I've become involved ( now teaching ) at my local PHP Meetup Group. Write 100 Posts - I didn't even make sixty. Still, more than last year... Start with Screencasts - Still on the to-do list. Pretty depressing at first glance, but I've accomplished quite a bit in other areas. All in all this has been a pretty incredible year. In January I started a paid internship with a great web design firm which helped push my skills to the next level. Working for Wojo Design really helped my figure out what I want to do for my career ( despite it being different from what I was doing for them ). I really thought that front-end design and WordPress were the tools for me. Then, this year, I started to develop PHP applications pretty heavily and fell in love. Back-end development has become my obsession. I've built Social Networks, Photo Sharing Applications, Blog's, Content Management Systems and I'm just getting started! I recently migrated both my personal blog as well as my company blog from WordPress to Jekyll. It's been a really fun project and the results are amazing! Our local PHP Meetup Group has gained a lot of traction this year. It has become one of the things I most look forward to and I hope it keeps going at its current pace. In a strange twist of fate, I landed ( my first ) full-time job at the end of this year. I've started working for a Medical Software company and so far it's pretty cool. I'm going to try and outline a few general goals for the upcoming year. As long as I learn a lot in my field and have a ton of fun I'll be satisfied but having a written list of goals seems like the right thing to do. Thanks to everyone who reads and leaves comments on this blog. It's really become a huge part of my life and I can't tell you how much readership and feedback means to me! And now, the ubiquitous end of the year post is over. Thanks for bearing with me!"
    },
    {
      "title": "Choosing A Text Editor",
      "url": "/choosing-a-text-editor",
      "date": "2013-01-06 00:00:00 -0500",
      "categories": [

      ],
      "body": "Bet you weren't expecting that, but it's really the truth. As programmers, we use text editors to write code. A good text editor will help you do that more powerfully and efficiently. The thing is, 90% of text editors on the market today do both of those things magnificently. What really matters it that you identify the features you need in a modern text editor and then choose any of the dozens of editors that offer those features. This is what I've come up with so far as my must-haves. 'Fun Plugins' is a bit vague but I just mean your editor should have a good developer community adding great features and keeping up with new ones. I think you should try as many editors as possible until you find one that just clicks with you. Also, I think trying a lot of editors is good because you never know when you're going to find yourself in a situation that requires the use of a particular editor. That being said, I think you should try: I find it quite enjoyable to play around with multiple editors. They each offer something unique and I think you'll find yourself with multiple favorites. Any other editor suggestions? Leave 'em in the comments!"
    },
    {
      "title": "My Git Cheat Sheet",
      "url": "/my-git-cheat-sheet",
      "date": "2013-01-09 00:00:00 -0500",
      "categories": [

      ],
      "body": "Hopefully this isn't too confusing to everyone. I've been learning a lot about git lately and have decided to use this post as a dumping ground for all the cool git tricks I pick up along the way. Want to add a trick or have a better way? Just leave it in the comments."
    },
    {
      "title": "Lessons Learned From Startup Weekend",
      "url": "/lessons-learned-from-startup-weekend",
      "date": "2013-02-03 00:00:00 -0500",
      "categories": [

      ],
      "body": "This weekend I attended my first Startup Weekend. The event went from Friday at 6pm until the following Sunday at 3:30pm. The days were broken down like this: Gather for orientation at 6pm. We checked in and had pizza and drinks in a big meeting room. @dtrenz and some other friends from my Meetup group were there and it was fun to catch up while we ate. After we were all done eating, we were brought into the large auditorium for the 'pitchfire' event. Before we got started -- the people at Rapt.FM showed us their new KickStarter video and gave a pretty inspiring presentation. Their CEO, Erik Torenberg, gave a really inspiring speech about his experiences with Startup Weekend events. He talked about his first event, driving down to Chicago with some of his friends, and the mistakes they made. He told us that his pitch was well received and he ended up being in charge of his our Startup Group. He talked about how the group completely fell apart and jokingly (I hope) said his team didn't even get the free point from the judges for participation. After that the 'pitchfire' began. Anyone that wanted could get in line and give a 60 second pitch for their startup idea. I think all in all there were 54 pitches on Friday. The ideas largely consisted of: When the pitches were finished, each person who pitched got a piece of paper with their startups name on it and we moved back into the meeting room to vote on our favorites. This is the first thing I think should have been done differently. The people who pitched were awkwardly wandering around the room with their sheet of paper, trying to get votes ( sticky notes that every participant received three of ). There were a few problems with this: If I were in charge I would have had all the pitchers stand at the front of the room giving out more details of their startup. Then I would have had a nice web application that allowed for anonymous voting. When the voting was done the group in charge picked the 10 most popular and the rest of the startup ideas were tossed. Then came the second most awkward part of the evening. With the 10 groups remaining the rest of us had to decide which group to join. Everyone wanted mobile developers I think @dtrenz was one of the few lucky enough to end up in a group with one. We overcommitted ourselves. We found a group that wanted to make a mobile application for the popular game Assassin. We (despite having no experience) volunteered to use PhoneGap to publish a native app that would help facilitate playing the game. We ended up in a group of 9, sitting upstairs talking about the game and how much more fun it would be if we could add: We didn't understand our Minimum Viable Product. We got it into our heads that the MVP was a functioning mobile application. The real MVP was a great presentation and perhaps a bit of a tech demo. Unfortunately it took us until Sunday morning to realize this. Honestly, Saturday was a pretty stressful day for our group. Things kept going wrong and I think we all started to feel the stress of a failing project. We met with a few really cool mentors but overall spent our time poorly and didn't get as much as we should have done. I think a few things I would have done differently are: We had an OK day and I left wishing I can gotten more accomplished. This was the day we really pulled it together. I think we realized how little time we had left before presenting and for the first time really got down to what it was we needed to present. Kelly really stepped it up and made some great looking screenshots for us. Ian did a great job and put together a demo of our game. The rest of our team really pulled it together with some great slides and a killer presentation. In minutes I watched our group turn from failed mobile app to excited entrepreneurs. Our group leader -- Chening -- got up on stage and just knocked it out of the park with a presentation. We nailed second place."
    },
    {
      "title": "Deploying Your Website",
      "url": "/deploying-your-website",
      "date": "2013-03-17 00:00:00 -0400",
      "categories": [

      ],
      "body": "This weekend I gave a presentation at the Ann Arbor PHP Meetup on website deployment. We covered three basic methods: Built in the early 70's, File Transfer Protocol ( or FTP ) was designed to transfer files from one host to another over the internet. Today there are many great ( and free ) tools that make FTP the easiest way to move files from your computer to your web server. We took a look at FileZilla as it's cross-platform and completely free. You can download FileZilla from the companies website and have it installed within minutes. From there, you just need to know the hostname, username and password necessary to access your website. Typically the hostname is ftp.yourwebsite.com and often times the username and password are the same as what you use to log in to your hosting provider's control panel. If you don't know the specific credentials for this, contact your web host for details. Once you're set up, you should see something like this: On the left is a file broswer for your computer and on the right is the same browser view for your server. From here, you can move files from the left to the right to put them online, or from right to left to download them to your computer. The one major caveat with deploying your website this way is the lack of versioning. It's difficult to tell where the most recent copy of a file is and if two or more people are working on the same project, you will almost definitely run into problems with code being overwritten. Example: Let's say you and a coworker need to make changes to the same file, you both start out with a copy of the file locally. You make your changes ( say changing the title ) and when you're finished, you open up FileZilla and push those changes live to your server. Just then, your coworker finishes their changes ( say adding a list to the page ) and they push their changes. Since they never saw your title change, and there is no versioning, their copy of the file will overwrite yours and your changes will be lost. Created in the late 90's, Rsync is a tool that synchronizes files from one host to another. Note the significant distinction of synchrinization vs. transference. Rsync is very capable of dealing with collisions and collaboration as it will recognize differences between the two locations. Rsync has a great deal of options, and checking out it's man page is definitely worthwhile. This can be done by typing this in your terminal: on a UNIX machine. It's simplest usage, however, can be seen here: The only real issue I have with Rsync deployment is it's lack of versioning. Although you can specify things like overwrite with the newer file, it's hard to see a deployment log with valid data in it unless you write something yourself. Released to the world in 2005, git has quickly become the de-facto startard in version control. Git does a great many things including: Git comes pre-installed on Mac's and most linux distributions but is freely available on all operating systems. There are tons of advantages to using Git but most of them fall outside of the scope of this blog post. There are three common methods for deploying code with git. Perhaps the simplest way to deploy with git is to have copies of your repository both on your computer and on your web server. You can make changes locally, push them to master, and then log into your server and pull them down. I've done this before and it's far superior to FTP but we can make it even better! You can simplify the above process by setting your web server as master and directly pushing your code to deployment with a: This works well for some projects, but sometimes you need only a subset of your codebase to go public, which brings us to step three. Git offers these things called bare repositories. They are great for having a central place for your codebase although they don't provide editable files like a full repository. One thing that's commonly done is to set up three copies of your codebase: Once you have this setup you can use a git post-recieve hook. These are easy to customize and can be found in your .git/hooks/ directory of your repository. Essentially what you do is write a script that runs whenever code is pushed to the bare repository. This code can grab just the public facing files and send them to your public directory. Here's an example of a post-recieve hook I'm using for this website ( which is running Jekyll ). Basically this code just takes my public directory of my codebase ( the code I want the world to see ) and only moves that to my public folder."
    },
    {
      "title": "Terminal-Fu",
      "url": "/terminal-fu",
      "date": "2013-03-20 00:00:00 -0400",
      "categories": [

      ],
      "body": "Recently, I started working for Barracuda Networks. I spend a lot of time in the terminal at work now, which is totally awesome. I've been learning some great pro-tips lately and I think they're worth a share! Say you've got a long line in your terminal Then you realize you mispelled something at the beginning of the line! No worry, just use Ctrl + a to jump to the beginning of the line and then you can just type Ctrl + e to jump back to the end! So often you'll need to re-use a command that you used recently, or maybe you just can't remember how a certain command goes. It's pretty cool that you can just type history like this: in the terminal and it will give you a list of the last commands you used. Way cooler, however, is the interactive, fuzzy search through your history by hitting Ctrl + r Then just start typing something you need from your history and it'll find it for you. Some cool notes on Ctrl + r are that you can: Ever find yourself needing to type in the same long string twice? Maybe a file path or a long program name? Commonly I find myself doing something like this: Imagine the time I waste typing ~/.bashrc twice! Here's a cool trick. At anytime in your terminal hit Esc + . ( that's escape period ) and it will automatically paste in the last string you typed. It's not 100% accurate but it's pretty great! If you're a terminal champion -- eventually you will run out of screen space. I tried to make it work for a while but eventually you need more than will fit on 2 ( or 3 ) screens! What's the solution? Have tons of terminals inside each terminal! Terminal Multiplexers, namely Screen and Tmux, allow you to have a bunch of terminal sessions inside one terminal ( think internal tabs ) and navigate between them with ease. Both Screen and Tmux are pretty sweet, but screen hasn't been supported in forever so just save yourself some pain and go with tmux. I'm going to write a tmux post soon with install instructions and some basic usage but just know it's sweet for now! Last thing. If you're using the terminal a lot, you should really check out all of the amazing tools sitting in front of you -- they'll make your life way better! I recommend reading about and regularly using: Just look them up with a quick 'man grep' and start living better!"
    },
    {
      "title": "Vim Has Ruined Text Editing For Me",
      "url": "/vim-has-ruined-text-editing-for-me",
      "date": "2013-04-18 00:00:00 -0400",
      "categories": [

      ],
      "body": "I've been using vim as my full time code editor for about 4 months now. It was not an easy journey but it was definitely worthwhile. This is not a tutorial on how or why to use vim. If you're looking for something like that you should check out: Starting out using vim is extremely difficult. Eventually though I began to realize that a lot of the things that were tough at first led to better ways to edit text. I'm not going to get too specific but there are a few things that vim offers that I've come to expect whenever I'm editing text. I find myself getting more and more frustrated when I don't have these tools available and it's caused me to use vim for more and more of my non code editing. Lately I've been looking into vim plugins that make doing other text related tasks like email, blog posts and journaling better. It seems like the easiest solution is just to use vim for everything."
    },
    {
      "title": "Install ImageMagick with PHP on Debian",
      "url": "/install-imagemagick-with-php-on-debian",
      "date": "2013-04-22 00:00:00 -0400",
      "categories": [

      ],
      "body": "I've been working on an app lately that involves some image manipulation. Most of the time I use GD for image manipulation but there are a lot of things it just can't do easily. When I run into prolems GD can't solve, I turn to ImageMagick. ImageMagick is great, it's powerful and easy-to-use. Unfortunately, it's an enormouse pain to install and set-up. It was far from easy setting it up on Debian / Ubuntu -- so here's how I did it. I hope it helps. You can get ImageMagick and its dependencies from the apt-get repository. In order to use PHP to interact with ImageMagick you'll need this package. Now that you have the PHP Dev tools and ImageMagick, you just need the Imagick package to interface between PHP and ImageMagick. Now you can use a ton of great tools, check out a list here!"
    }
  ]
}